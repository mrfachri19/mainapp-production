{"version":3,"file":"530.bundle.js","mappings":"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","sources":["webpack://mainapp/./node_modules/@sentry/tracing/esm/constants.js","webpack://mainapp/./node_modules/@sentry/tracing/esm/errors.js","webpack://mainapp/./node_modules/@sentry/tracing/esm/hubextensions.js","webpack://mainapp/./node_modules/@sentry/tracing/esm/idletransaction.js","webpack://mainapp/./node_modules/@sentry/tracing/esm/integrations/node/express.js","webpack://mainapp/./node_modules/@sentry/tracing/esm/integrations/node/postgres.js","webpack://mainapp/./node_modules/@sentry/tracing/esm/integrations/node/mysql.js","webpack://mainapp/./node_modules/@sentry/tracing/esm/integrations/node/mongo.js","webpack://mainapp/./node_modules/@sentry/utils/esm/tracing.js","webpack://mainapp/./node_modules/@sentry/tracing/esm/browser/backgroundtab.js","webpack://mainapp/./node_modules/@sentry/tracing/esm/browser/web-vitals/lib/bindReporter.js","webpack://mainapp/./node_modules/@sentry/tracing/esm/browser/web-vitals/lib/initMetric.js","webpack://mainapp/./node_modules/@sentry/tracing/esm/browser/web-vitals/lib/generateUniqueID.js","webpack://mainapp/./node_modules/@sentry/tracing/esm/browser/web-vitals/lib/observe.js","webpack://mainapp/./node_modules/@sentry/tracing/esm/browser/web-vitals/lib/onHidden.js","webpack://mainapp/./node_modules/@sentry/tracing/esm/browser/web-vitals/lib/getVisibilityWatcher.js","webpack://mainapp/./node_modules/@sentry/tracing/esm/browser/web-vitals/getLCP.js","webpack://mainapp/./node_modules/@sentry/tracing/esm/browser/metrics.js","webpack://mainapp/./node_modules/@sentry/tracing/esm/browser/web-vitals/getCLS.js","webpack://mainapp/./node_modules/@sentry/tracing/esm/browser/web-vitals/getFID.js","webpack://mainapp/./node_modules/@sentry/tracing/esm/browser/request.js","webpack://mainapp/./node_modules/@sentry/tracing/esm/browser/router.js","webpack://mainapp/./node_modules/@sentry/tracing/esm/spanstatus.js","webpack://mainapp/./node_modules/@sentry/tracing/esm/browser/browsertracing.js","webpack://mainapp/./node_modules/@sentry/tracing/esm/index.js","webpack://mainapp/./node_modules/@sentry/tracing/esm/span.js","webpack://mainapp/./node_modules/@sentry/tracing/esm/transaction.js","webpack://mainapp/./node_modules/@sentry/tracing/esm/utils.js","webpack://mainapp/./node_modules/@sentry/tracing/node_modules/tslib/tslib.es6.js"],"sourcesContent":["// Store finish reasons in tuple to save on bundle size\n// Readonly type should enforce that this is not mutated.\nexport var FINISH_REASON_TAG = 'finishReason';\nexport var IDLE_TRANSACTION_FINISH_REASONS = ['heartbeatFailed', 'idleTimeout', 'documentHidden'];\n//# sourceMappingURL=constants.js.map","import { addInstrumentationHandler, logger } from '@sentry/utils';\nimport { getActiveTransaction } from './utils';\n/**\n * Configures global error listeners\n */\nexport function registerErrorInstrumentation() {\n    addInstrumentationHandler('error', errorCallback);\n    addInstrumentationHandler('unhandledrejection', errorCallback);\n}\n/**\n * If an error or unhandled promise occurs, we mark the active transaction as failed\n */\nfunction errorCallback() {\n    var activeTransaction = getActiveTransaction();\n    if (activeTransaction) {\n        var status_1 = 'internal_error';\n        logger.log(\"[Tracing] Transaction: \" + status_1 + \" -> Global error occured\");\n        activeTransaction.setStatus(status_1);\n    }\n}\n//# sourceMappingURL=errors.js.map","import { __assign, __read, __spread } from \"tslib\";\nimport { getMainCarrier } from '@sentry/hub';\nimport { dynamicRequire, isNodeEnv, loadModule, logger } from '@sentry/utils';\nimport { registerErrorInstrumentation } from './errors';\nimport { IdleTransaction } from './idletransaction';\nimport { Transaction } from './transaction';\nimport { hasTracingEnabled } from './utils';\n/** Returns all trace headers that are currently on the top scope. */\nfunction traceHeaders() {\n    var scope = this.getScope();\n    if (scope) {\n        var span = scope.getSpan();\n        if (span) {\n            return {\n                'sentry-trace': span.toTraceparent(),\n            };\n        }\n    }\n    return {};\n}\n/**\n * Makes a sampling decision for the given transaction and stores it on the transaction.\n *\n * Called every time a transaction is created. Only transactions which emerge with a `sampled` value of `true` will be\n * sent to Sentry.\n *\n * @param transaction: The transaction needing a sampling decision\n * @param options: The current client's options, so we can access `tracesSampleRate` and/or `tracesSampler`\n * @param samplingContext: Default and user-provided data which may be used to help make the decision\n *\n * @returns The given transaction with its `sampled` value set\n */\nfunction sample(transaction, options, samplingContext) {\n    // nothing to do if tracing is not enabled\n    if (!hasTracingEnabled(options)) {\n        transaction.sampled = false;\n        return transaction;\n    }\n    // if the user has forced a sampling decision by passing a `sampled` value in their transaction context, go with that\n    if (transaction.sampled !== undefined) {\n        transaction.setMetadata({\n            transactionSampling: { method: 'explicitly_set' },\n        });\n        return transaction;\n    }\n    // we would have bailed already if neither `tracesSampler` nor `tracesSampleRate` were defined, so one of these should\n    // work; prefer the hook if so\n    var sampleRate;\n    if (typeof options.tracesSampler === 'function') {\n        sampleRate = options.tracesSampler(samplingContext);\n        transaction.setMetadata({\n            transactionSampling: {\n                method: 'client_sampler',\n                // cast to number in case it's a boolean\n                rate: Number(sampleRate),\n            },\n        });\n    }\n    else if (samplingContext.parentSampled !== undefined) {\n        sampleRate = samplingContext.parentSampled;\n        transaction.setMetadata({\n            transactionSampling: { method: 'inheritance' },\n        });\n    }\n    else {\n        sampleRate = options.tracesSampleRate;\n        transaction.setMetadata({\n            transactionSampling: {\n                method: 'client_rate',\n                // cast to number in case it's a boolean\n                rate: Number(sampleRate),\n            },\n        });\n    }\n    // Since this is coming from the user (or from a function provided by the user), who knows what we might get. (The\n    // only valid values are booleans or numbers between 0 and 1.)\n    if (!isValidSampleRate(sampleRate)) {\n        logger.warn('[Tracing] Discarding transaction because of invalid sample rate.');\n        transaction.sampled = false;\n        return transaction;\n    }\n    // if the function returned 0 (or false), or if `tracesSampleRate` is 0, it's a sign the transaction should be dropped\n    if (!sampleRate) {\n        logger.log(\"[Tracing] Discarding transaction because \" + (typeof options.tracesSampler === 'function'\n            ? 'tracesSampler returned 0 or false'\n            : 'a negative sampling decision was inherited or tracesSampleRate is set to 0'));\n        transaction.sampled = false;\n        return transaction;\n    }\n    // Now we roll the dice. Math.random is inclusive of 0, but not of 1, so strict < is safe here. In case sampleRate is\n    // a boolean, the < comparison will cause it to be automatically cast to 1 if it's true and 0 if it's false.\n    transaction.sampled = Math.random() < sampleRate;\n    // if we're not going to keep it, we're done\n    if (!transaction.sampled) {\n        logger.log(\"[Tracing] Discarding transaction because it's not included in the random sample (sampling rate = \" + Number(sampleRate) + \")\");\n        return transaction;\n    }\n    logger.log(\"[Tracing] starting \" + transaction.op + \" transaction - \" + transaction.name);\n    return transaction;\n}\n/**\n * Checks the given sample rate to make sure it is valid type and value (a boolean, or a number between 0 and 1).\n */\nfunction isValidSampleRate(rate) {\n    // we need to check NaN explicitly because it's of type 'number' and therefore wouldn't get caught by this typecheck\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    if (isNaN(rate) || !(typeof rate === 'number' || typeof rate === 'boolean')) {\n        logger.warn(\"[Tracing] Given sample rate is invalid. Sample rate must be a boolean or a number between 0 and 1. Got \" + JSON.stringify(rate) + \" of type \" + JSON.stringify(typeof rate) + \".\");\n        return false;\n    }\n    // in case sampleRate is a boolean, it will get automatically cast to 1 if it's true and 0 if it's false\n    if (rate < 0 || rate > 1) {\n        logger.warn(\"[Tracing] Given sample rate is invalid. Sample rate must be between 0 and 1. Got \" + rate + \".\");\n        return false;\n    }\n    return true;\n}\n/**\n * Creates a new transaction and adds a sampling decision if it doesn't yet have one.\n *\n * The Hub.startTransaction method delegates to this method to do its work, passing the Hub instance in as `this`, as if\n * it had been called on the hub directly. Exists as a separate function so that it can be injected into the class as an\n * \"extension method.\"\n *\n * @param this: The Hub starting the transaction\n * @param transactionContext: Data used to configure the transaction\n * @param CustomSamplingContext: Optional data to be provided to the `tracesSampler` function (if any)\n *\n * @returns The new transaction\n *\n * @see {@link Hub.startTransaction}\n */\nfunction _startTransaction(transactionContext, customSamplingContext) {\n    var client = this.getClient();\n    var options = (client && client.getOptions()) || {};\n    var transaction = new Transaction(transactionContext, this);\n    transaction = sample(transaction, options, __assign({ parentSampled: transactionContext.parentSampled, transactionContext: transactionContext }, customSamplingContext));\n    if (transaction.sampled) {\n        transaction.initSpanRecorder(options._experiments && options._experiments.maxSpans);\n    }\n    return transaction;\n}\n/**\n * Create new idle transaction.\n */\nexport function startIdleTransaction(hub, transactionContext, idleTimeout, onScope, customSamplingContext) {\n    var client = hub.getClient();\n    var options = (client && client.getOptions()) || {};\n    var transaction = new IdleTransaction(transactionContext, hub, idleTimeout, onScope);\n    transaction = sample(transaction, options, __assign({ parentSampled: transactionContext.parentSampled, transactionContext: transactionContext }, customSamplingContext));\n    if (transaction.sampled) {\n        transaction.initSpanRecorder(options._experiments && options._experiments.maxSpans);\n    }\n    return transaction;\n}\n/**\n * @private\n */\nexport function _addTracingExtensions() {\n    var carrier = getMainCarrier();\n    if (!carrier.__SENTRY__) {\n        return;\n    }\n    carrier.__SENTRY__.extensions = carrier.__SENTRY__.extensions || {};\n    if (!carrier.__SENTRY__.extensions.startTransaction) {\n        carrier.__SENTRY__.extensions.startTransaction = _startTransaction;\n    }\n    if (!carrier.__SENTRY__.extensions.traceHeaders) {\n        carrier.__SENTRY__.extensions.traceHeaders = traceHeaders;\n    }\n}\n/**\n * @private\n */\nfunction _autoloadDatabaseIntegrations() {\n    var carrier = getMainCarrier();\n    if (!carrier.__SENTRY__) {\n        return;\n    }\n    var packageToIntegrationMapping = {\n        mongodb: function () {\n            var integration = dynamicRequire(module, './integrations/node/mongo');\n            return new integration.Mongo();\n        },\n        mongoose: function () {\n            var integration = dynamicRequire(module, './integrations/node/mongo');\n            return new integration.Mongo({ mongoose: true });\n        },\n        mysql: function () {\n            var integration = dynamicRequire(module, './integrations/node/mysql');\n            return new integration.Mysql();\n        },\n        pg: function () {\n            var integration = dynamicRequire(module, './integrations/node/postgres');\n            return new integration.Postgres();\n        },\n    };\n    var mappedPackages = Object.keys(packageToIntegrationMapping)\n        .filter(function (moduleName) { return !!loadModule(moduleName); })\n        .map(function (pkg) {\n        try {\n            return packageToIntegrationMapping[pkg]();\n        }\n        catch (e) {\n            return undefined;\n        }\n    })\n        .filter(function (p) { return p; });\n    if (mappedPackages.length > 0) {\n        carrier.__SENTRY__.integrations = __spread((carrier.__SENTRY__.integrations || []), mappedPackages);\n    }\n}\n/**\n * This patches the global object and injects the Tracing extensions methods\n */\nexport function addExtensionMethods() {\n    _addTracingExtensions();\n    // Detect and automatically load specified integrations.\n    if (isNodeEnv()) {\n        _autoloadDatabaseIntegrations();\n    }\n    // If an error happens globally, we should make sure transaction status is set to error.\n    registerErrorInstrumentation();\n}\n//# sourceMappingURL=hubextensions.js.map","import { __extends, __values } from \"tslib\";\nimport { logger, timestampWithMs } from '@sentry/utils';\nimport { FINISH_REASON_TAG, IDLE_TRANSACTION_FINISH_REASONS } from './constants';\nimport { SpanRecorder } from './span';\nimport { Transaction } from './transaction';\nexport var DEFAULT_IDLE_TIMEOUT = 1000;\nexport var HEARTBEAT_INTERVAL = 5000;\n/**\n * @inheritDoc\n */\nvar IdleTransactionSpanRecorder = /** @class */ (function (_super) {\n    __extends(IdleTransactionSpanRecorder, _super);\n    function IdleTransactionSpanRecorder(_pushActivity, _popActivity, transactionSpanId, maxlen) {\n        if (transactionSpanId === void 0) { transactionSpanId = ''; }\n        var _this = _super.call(this, maxlen) || this;\n        _this._pushActivity = _pushActivity;\n        _this._popActivity = _popActivity;\n        _this.transactionSpanId = transactionSpanId;\n        return _this;\n    }\n    /**\n     * @inheritDoc\n     */\n    IdleTransactionSpanRecorder.prototype.add = function (span) {\n        var _this = this;\n        // We should make sure we do not push and pop activities for\n        // the transaction that this span recorder belongs to.\n        if (span.spanId !== this.transactionSpanId) {\n            // We patch span.finish() to pop an activity after setting an endTimestamp.\n            span.finish = function (endTimestamp) {\n                span.endTimestamp = typeof endTimestamp === 'number' ? endTimestamp : timestampWithMs();\n                _this._popActivity(span.spanId);\n            };\n            // We should only push new activities if the span does not have an end timestamp.\n            if (span.endTimestamp === undefined) {\n                this._pushActivity(span.spanId);\n            }\n        }\n        _super.prototype.add.call(this, span);\n    };\n    return IdleTransactionSpanRecorder;\n}(SpanRecorder));\nexport { IdleTransactionSpanRecorder };\n/**\n * An IdleTransaction is a transaction that automatically finishes. It does this by tracking child spans as activities.\n * You can have multiple IdleTransactions active, but if the `onScope` option is specified, the idle transaction will\n * put itself on the scope on creation.\n */\nvar IdleTransaction = /** @class */ (function (_super) {\n    __extends(IdleTransaction, _super);\n    function IdleTransaction(transactionContext, _idleHub, \n    /**\n     * The time to wait in ms until the idle transaction will be finished.\n     * @default 1000\n     */\n    _idleTimeout, \n    // Whether or not the transaction should put itself on the scope when it starts and pop itself off when it ends\n    _onScope) {\n        if (_idleTimeout === void 0) { _idleTimeout = DEFAULT_IDLE_TIMEOUT; }\n        if (_onScope === void 0) { _onScope = false; }\n        var _this = _super.call(this, transactionContext, _idleHub) || this;\n        _this._idleHub = _idleHub;\n        _this._idleTimeout = _idleTimeout;\n        _this._onScope = _onScope;\n        // Activities store a list of active spans\n        _this.activities = {};\n        // Amount of times heartbeat has counted. Will cause transaction to finish after 3 beats.\n        _this._heartbeatCounter = 0;\n        // We should not use heartbeat if we finished a transaction\n        _this._finished = false;\n        _this._beforeFinishCallbacks = [];\n        if (_idleHub && _onScope) {\n            // There should only be one active transaction on the scope\n            clearActiveTransaction(_idleHub);\n            // We set the transaction here on the scope so error events pick up the trace\n            // context and attach it to the error.\n            logger.log(\"Setting idle transaction on scope. Span ID: \" + _this.spanId);\n            _idleHub.configureScope(function (scope) { return scope.setSpan(_this); });\n        }\n        _this._initTimeout = setTimeout(function () {\n            if (!_this._finished) {\n                _this.finish();\n            }\n        }, _this._idleTimeout);\n        return _this;\n    }\n    /** {@inheritDoc} */\n    IdleTransaction.prototype.finish = function (endTimestamp) {\n        var e_1, _a;\n        var _this = this;\n        if (endTimestamp === void 0) { endTimestamp = timestampWithMs(); }\n        this._finished = true;\n        this.activities = {};\n        if (this.spanRecorder) {\n            logger.log('[Tracing] finishing IdleTransaction', new Date(endTimestamp * 1000).toISOString(), this.op);\n            try {\n                for (var _b = __values(this._beforeFinishCallbacks), _c = _b.next(); !_c.done; _c = _b.next()) {\n                    var callback = _c.value;\n                    callback(this, endTimestamp);\n                }\n            }\n            catch (e_1_1) { e_1 = { error: e_1_1 }; }\n            finally {\n                try {\n                    if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n                }\n                finally { if (e_1) throw e_1.error; }\n            }\n            this.spanRecorder.spans = this.spanRecorder.spans.filter(function (span) {\n                // If we are dealing with the transaction itself, we just return it\n                if (span.spanId === _this.spanId) {\n                    return true;\n                }\n                // We cancel all pending spans with status \"cancelled\" to indicate the idle transaction was finished early\n                if (!span.endTimestamp) {\n                    span.endTimestamp = endTimestamp;\n                    span.setStatus('cancelled');\n                    logger.log('[Tracing] cancelling span since transaction ended early', JSON.stringify(span, undefined, 2));\n                }\n                var keepSpan = span.startTimestamp < endTimestamp;\n                if (!keepSpan) {\n                    logger.log('[Tracing] discarding Span since it happened after Transaction was finished', JSON.stringify(span, undefined, 2));\n                }\n                return keepSpan;\n            });\n            logger.log('[Tracing] flushing IdleTransaction');\n        }\n        else {\n            logger.log('[Tracing] No active IdleTransaction');\n        }\n        // if `this._onScope` is `true`, the transaction put itself on the scope when it started\n        if (this._onScope) {\n            clearActiveTransaction(this._idleHub);\n        }\n        return _super.prototype.finish.call(this, endTimestamp);\n    };\n    /**\n     * Register a callback function that gets excecuted before the transaction finishes.\n     * Useful for cleanup or if you want to add any additional spans based on current context.\n     *\n     * This is exposed because users have no other way of running something before an idle transaction\n     * finishes.\n     */\n    IdleTransaction.prototype.registerBeforeFinishCallback = function (callback) {\n        this._beforeFinishCallbacks.push(callback);\n    };\n    /**\n     * @inheritDoc\n     */\n    IdleTransaction.prototype.initSpanRecorder = function (maxlen) {\n        var _this = this;\n        if (!this.spanRecorder) {\n            var pushActivity = function (id) {\n                if (_this._finished) {\n                    return;\n                }\n                _this._pushActivity(id);\n            };\n            var popActivity = function (id) {\n                if (_this._finished) {\n                    return;\n                }\n                _this._popActivity(id);\n            };\n            this.spanRecorder = new IdleTransactionSpanRecorder(pushActivity, popActivity, this.spanId, maxlen);\n            // Start heartbeat so that transactions do not run forever.\n            logger.log('Starting heartbeat');\n            this._pingHeartbeat();\n        }\n        this.spanRecorder.add(this);\n    };\n    /**\n     * Start tracking a specific activity.\n     * @param spanId The span id that represents the activity\n     */\n    IdleTransaction.prototype._pushActivity = function (spanId) {\n        if (this._initTimeout) {\n            clearTimeout(this._initTimeout);\n            this._initTimeout = undefined;\n        }\n        logger.log(\"[Tracing] pushActivity: \" + spanId);\n        this.activities[spanId] = true;\n        logger.log('[Tracing] new activities count', Object.keys(this.activities).length);\n    };\n    /**\n     * Remove an activity from usage\n     * @param spanId The span id that represents the activity\n     */\n    IdleTransaction.prototype._popActivity = function (spanId) {\n        var _this = this;\n        if (this.activities[spanId]) {\n            logger.log(\"[Tracing] popActivity \" + spanId);\n            // eslint-disable-next-line @typescript-eslint/no-dynamic-delete\n            delete this.activities[spanId];\n            logger.log('[Tracing] new activities count', Object.keys(this.activities).length);\n        }\n        if (Object.keys(this.activities).length === 0) {\n            var timeout = this._idleTimeout;\n            // We need to add the timeout here to have the real endtimestamp of the transaction\n            // Remember timestampWithMs is in seconds, timeout is in ms\n            var end_1 = timestampWithMs() + timeout / 1000;\n            setTimeout(function () {\n                if (!_this._finished) {\n                    _this.setTag(FINISH_REASON_TAG, IDLE_TRANSACTION_FINISH_REASONS[1]);\n                    _this.finish(end_1);\n                }\n            }, timeout);\n        }\n    };\n    /**\n     * Checks when entries of this.activities are not changing for 3 beats.\n     * If this occurs we finish the transaction.\n     */\n    IdleTransaction.prototype._beat = function () {\n        // We should not be running heartbeat if the idle transaction is finished.\n        if (this._finished) {\n            return;\n        }\n        var heartbeatString = Object.keys(this.activities).join('');\n        if (heartbeatString === this._prevHeartbeatString) {\n            this._heartbeatCounter += 1;\n        }\n        else {\n            this._heartbeatCounter = 1;\n        }\n        this._prevHeartbeatString = heartbeatString;\n        if (this._heartbeatCounter >= 3) {\n            logger.log('[Tracing] Transaction finished because of no change for 3 heart beats');\n            this.setStatus('deadline_exceeded');\n            this.setTag(FINISH_REASON_TAG, IDLE_TRANSACTION_FINISH_REASONS[0]);\n            this.finish();\n        }\n        else {\n            this._pingHeartbeat();\n        }\n    };\n    /**\n     * Pings the heartbeat\n     */\n    IdleTransaction.prototype._pingHeartbeat = function () {\n        var _this = this;\n        logger.log(\"pinging Heartbeat -> current counter: \" + this._heartbeatCounter);\n        setTimeout(function () {\n            _this._beat();\n        }, HEARTBEAT_INTERVAL);\n    };\n    return IdleTransaction;\n}(Transaction));\nexport { IdleTransaction };\n/**\n * Reset transaction on scope to `undefined`\n */\nfunction clearActiveTransaction(hub) {\n    if (hub) {\n        var scope = hub.getScope();\n        if (scope) {\n            var transaction = scope.getTransaction();\n            if (transaction) {\n                scope.setSpan(undefined);\n            }\n        }\n    }\n}\n//# sourceMappingURL=idletransaction.js.map","import { __read, __spread } from \"tslib\";\nimport { logger } from '@sentry/utils';\n/**\n * Express integration\n *\n * Provides an request and error handler for Express framework as well as tracing capabilities\n */\nvar Express = /** @class */ (function () {\n    /**\n     * @inheritDoc\n     */\n    function Express(options) {\n        if (options === void 0) { options = {}; }\n        /**\n         * @inheritDoc\n         */\n        this.name = Express.id;\n        this._router = options.router || options.app;\n        this._methods = (Array.isArray(options.methods) ? options.methods : []).concat('use');\n    }\n    /**\n     * @inheritDoc\n     */\n    Express.prototype.setupOnce = function () {\n        if (!this._router) {\n            logger.error('ExpressIntegration is missing an Express instance');\n            return;\n        }\n        instrumentMiddlewares(this._router, this._methods);\n    };\n    /**\n     * @inheritDoc\n     */\n    Express.id = 'Express';\n    return Express;\n}());\nexport { Express };\n/**\n * Wraps original middleware function in a tracing call, which stores the info about the call as a span,\n * and finishes it once the middleware is done invoking.\n *\n * Express middlewares have 3 various forms, thus we have to take care of all of them:\n * // sync\n * app.use(function (req, res) { ... })\n * // async\n * app.use(function (req, res, next) { ... })\n * // error handler\n * app.use(function (err, req, res, next) { ... })\n *\n * They all internally delegate to the `router[method]` of the given application instance.\n */\n// eslint-disable-next-line @typescript-eslint/ban-types, @typescript-eslint/no-explicit-any\nfunction wrap(fn, method) {\n    var arity = fn.length;\n    switch (arity) {\n        case 2: {\n            return function (req, res) {\n                var transaction = res.__sentry_transaction;\n                if (transaction) {\n                    var span_1 = transaction.startChild({\n                        description: fn.name,\n                        op: \"express.middleware.\" + method,\n                    });\n                    res.once('finish', function () {\n                        span_1.finish();\n                    });\n                }\n                return fn.call(this, req, res);\n            };\n        }\n        case 3: {\n            return function (req, res, next) {\n                var _a;\n                var transaction = res.__sentry_transaction;\n                var span = (_a = transaction) === null || _a === void 0 ? void 0 : _a.startChild({\n                    description: fn.name,\n                    op: \"express.middleware.\" + method,\n                });\n                fn.call(this, req, res, function () {\n                    var args = [];\n                    for (var _i = 0; _i < arguments.length; _i++) {\n                        args[_i] = arguments[_i];\n                    }\n                    var _a;\n                    (_a = span) === null || _a === void 0 ? void 0 : _a.finish();\n                    next.call.apply(next, __spread([this], args));\n                });\n            };\n        }\n        case 4: {\n            return function (err, req, res, next) {\n                var _a;\n                var transaction = res.__sentry_transaction;\n                var span = (_a = transaction) === null || _a === void 0 ? void 0 : _a.startChild({\n                    description: fn.name,\n                    op: \"express.middleware.\" + method,\n                });\n                fn.call(this, err, req, res, function () {\n                    var args = [];\n                    for (var _i = 0; _i < arguments.length; _i++) {\n                        args[_i] = arguments[_i];\n                    }\n                    var _a;\n                    (_a = span) === null || _a === void 0 ? void 0 : _a.finish();\n                    next.call.apply(next, __spread([this], args));\n                });\n            };\n        }\n        default: {\n            throw new Error(\"Express middleware takes 2-4 arguments. Got: \" + arity);\n        }\n    }\n}\n/**\n * Takes all the function arguments passed to the original `app` or `router` method, eg. `app.use` or `router.use`\n * and wraps every function, as well as array of functions with a call to our `wrap` method.\n * We have to take care of the arrays as well as iterate over all of the arguments,\n * as `app.use` can accept middlewares in few various forms.\n *\n * app.use([<path>], <fn>)\n * app.use([<path>], <fn>, ...<fn>)\n * app.use([<path>], ...<fn>[])\n */\nfunction wrapMiddlewareArgs(args, method) {\n    return args.map(function (arg) {\n        if (typeof arg === 'function') {\n            return wrap(arg, method);\n        }\n        if (Array.isArray(arg)) {\n            return arg.map(function (a) {\n                if (typeof a === 'function') {\n                    return wrap(a, method);\n                }\n                return a;\n            });\n        }\n        return arg;\n    });\n}\n/**\n * Patches original router to utilize our tracing functionality\n */\nfunction patchMiddleware(router, method) {\n    var originalCallback = router[method];\n    router[method] = function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        return originalCallback.call.apply(originalCallback, __spread([this], wrapMiddlewareArgs(args, method)));\n    };\n    return router;\n}\n/**\n * Patches original router methods\n */\nfunction instrumentMiddlewares(router, methods) {\n    if (methods === void 0) { methods = []; }\n    methods.forEach(function (method) { return patchMiddleware(router, method); });\n}\n//# sourceMappingURL=express.js.map","import { fill, isThenable, loadModule, logger } from '@sentry/utils';\n/** Tracing integration for node-postgres package */\nvar Postgres = /** @class */ (function () {\n    function Postgres(options) {\n        if (options === void 0) { options = {}; }\n        /**\n         * @inheritDoc\n         */\n        this.name = Postgres.id;\n        this._usePgNative = !!options.usePgNative;\n    }\n    /**\n     * @inheritDoc\n     */\n    Postgres.prototype.setupOnce = function (_, getCurrentHub) {\n        var _a;\n        var pkg = loadModule('pg');\n        if (!pkg) {\n            logger.error('Postgres Integration was unable to require `pg` package.');\n            return;\n        }\n        if (this._usePgNative && !((_a = pkg.native) === null || _a === void 0 ? void 0 : _a.Client)) {\n            logger.error(\"Postgres Integration was unable to access 'pg-native' bindings.\");\n            return;\n        }\n        var Client = (this._usePgNative ? pkg.native : pkg).Client;\n        /**\n         * function (query, callback) => void\n         * function (query, params, callback) => void\n         * function (query) => Promise\n         * function (query, params) => Promise\n         * function (pg.Cursor) => pg.Cursor\n         */\n        fill(Client.prototype, 'query', function (orig) {\n            return function (config, values, callback) {\n                var _a, _b, _c;\n                var scope = getCurrentHub().getScope();\n                var parentSpan = (_a = scope) === null || _a === void 0 ? void 0 : _a.getSpan();\n                var span = (_b = parentSpan) === null || _b === void 0 ? void 0 : _b.startChild({\n                    description: typeof config === 'string' ? config : config.text,\n                    op: 'db',\n                });\n                if (typeof callback === 'function') {\n                    return orig.call(this, config, values, function (err, result) {\n                        var _a;\n                        (_a = span) === null || _a === void 0 ? void 0 : _a.finish();\n                        callback(err, result);\n                    });\n                }\n                if (typeof values === 'function') {\n                    return orig.call(this, config, function (err, result) {\n                        var _a;\n                        (_a = span) === null || _a === void 0 ? void 0 : _a.finish();\n                        values(err, result);\n                    });\n                }\n                var rv = typeof values !== 'undefined' ? orig.call(this, config, values) : orig.call(this, config);\n                if (isThenable(rv)) {\n                    return rv.then(function (res) {\n                        var _a;\n                        (_a = span) === null || _a === void 0 ? void 0 : _a.finish();\n                        return res;\n                    });\n                }\n                (_c = span) === null || _c === void 0 ? void 0 : _c.finish();\n                return rv;\n            };\n        });\n    };\n    /**\n     * @inheritDoc\n     */\n    Postgres.id = 'Postgres';\n    return Postgres;\n}());\nexport { Postgres };\n//# sourceMappingURL=postgres.js.map","import { fill, loadModule, logger } from '@sentry/utils';\n/** Tracing integration for node-mysql package */\nvar Mysql = /** @class */ (function () {\n    function Mysql() {\n        /**\n         * @inheritDoc\n         */\n        this.name = Mysql.id;\n    }\n    /**\n     * @inheritDoc\n     */\n    Mysql.prototype.setupOnce = function (_, getCurrentHub) {\n        var pkg = loadModule('mysql/lib/Connection.js');\n        if (!pkg) {\n            logger.error('Mysql Integration was unable to require `mysql` package.');\n            return;\n        }\n        // The original function will have one of these signatures:\n        //    function (callback) => void\n        //    function (options, callback) => void\n        //    function (options, values, callback) => void\n        fill(pkg, 'createQuery', function (orig) {\n            return function (options, values, callback) {\n                var _a, _b;\n                var scope = getCurrentHub().getScope();\n                var parentSpan = (_a = scope) === null || _a === void 0 ? void 0 : _a.getSpan();\n                var span = (_b = parentSpan) === null || _b === void 0 ? void 0 : _b.startChild({\n                    description: typeof options === 'string' ? options : options.sql,\n                    op: 'db',\n                });\n                if (typeof callback === 'function') {\n                    return orig.call(this, options, values, function (err, result, fields) {\n                        var _a;\n                        (_a = span) === null || _a === void 0 ? void 0 : _a.finish();\n                        callback(err, result, fields);\n                    });\n                }\n                if (typeof values === 'function') {\n                    return orig.call(this, options, function (err, result, fields) {\n                        var _a;\n                        (_a = span) === null || _a === void 0 ? void 0 : _a.finish();\n                        values(err, result, fields);\n                    });\n                }\n                return orig.call(this, options, values, callback);\n            };\n        });\n    };\n    /**\n     * @inheritDoc\n     */\n    Mysql.id = 'Mysql';\n    return Mysql;\n}());\nexport { Mysql };\n//# sourceMappingURL=mysql.js.map","import { __read, __spread } from \"tslib\";\nimport { fill, isThenable, loadModule, logger } from '@sentry/utils';\nvar OPERATIONS = [\n    'aggregate',\n    'bulkWrite',\n    'countDocuments',\n    'createIndex',\n    'createIndexes',\n    'deleteMany',\n    'deleteOne',\n    'distinct',\n    'drop',\n    'dropIndex',\n    'dropIndexes',\n    'estimatedDocumentCount',\n    'find',\n    'findOne',\n    'findOneAndDelete',\n    'findOneAndReplace',\n    'findOneAndUpdate',\n    'indexes',\n    'indexExists',\n    'indexInformation',\n    'initializeOrderedBulkOp',\n    'insertMany',\n    'insertOne',\n    'isCapped',\n    'mapReduce',\n    'options',\n    'parallelCollectionScan',\n    'rename',\n    'replaceOne',\n    'stats',\n    'updateMany',\n    'updateOne',\n];\n// All of the operations above take `options` and `callback` as their final parameters, but some of them\n// take additional parameters as well. For those operations, this is a map of\n// { <operation name>:  [<names of additional parameters>] }, as a way to know what to call the operation's\n// positional arguments when we add them to the span's `data` object later\nvar OPERATION_SIGNATURES = {\n    // aggregate intentionally not included because `pipeline` arguments are too complex to serialize well\n    // see https://github.com/getsentry/sentry-javascript/pull/3102\n    bulkWrite: ['operations'],\n    countDocuments: ['query'],\n    createIndex: ['fieldOrSpec'],\n    createIndexes: ['indexSpecs'],\n    deleteMany: ['filter'],\n    deleteOne: ['filter'],\n    distinct: ['key', 'query'],\n    dropIndex: ['indexName'],\n    find: ['query'],\n    findOne: ['query'],\n    findOneAndDelete: ['filter'],\n    findOneAndReplace: ['filter', 'replacement'],\n    findOneAndUpdate: ['filter', 'update'],\n    indexExists: ['indexes'],\n    insertMany: ['docs'],\n    insertOne: ['doc'],\n    mapReduce: ['map', 'reduce'],\n    rename: ['newName'],\n    replaceOne: ['filter', 'doc'],\n    updateMany: ['filter', 'update'],\n    updateOne: ['filter', 'update'],\n};\n/** Tracing integration for mongo package */\nvar Mongo = /** @class */ (function () {\n    /**\n     * @inheritDoc\n     */\n    function Mongo(options) {\n        if (options === void 0) { options = {}; }\n        /**\n         * @inheritDoc\n         */\n        this.name = Mongo.id;\n        this._operations = Array.isArray(options.operations) ? options.operations : OPERATIONS;\n        this._describeOperations = 'describeOperations' in options ? options.describeOperations : true;\n        this._useMongoose = !!options.useMongoose;\n    }\n    /**\n     * @inheritDoc\n     */\n    Mongo.prototype.setupOnce = function (_, getCurrentHub) {\n        var moduleName = this._useMongoose ? 'mongoose' : 'mongodb';\n        var pkg = loadModule(moduleName);\n        if (!pkg) {\n            logger.error(\"Mongo Integration was unable to require `\" + moduleName + \"` package.\");\n            return;\n        }\n        this._instrumentOperations(pkg.Collection, this._operations, getCurrentHub);\n    };\n    /**\n     * Patches original collection methods\n     */\n    Mongo.prototype._instrumentOperations = function (collection, operations, getCurrentHub) {\n        var _this = this;\n        operations.forEach(function (operation) { return _this._patchOperation(collection, operation, getCurrentHub); });\n    };\n    /**\n     * Patches original collection to utilize our tracing functionality\n     */\n    Mongo.prototype._patchOperation = function (collection, operation, getCurrentHub) {\n        if (!(operation in collection.prototype))\n            return;\n        var getSpanContext = this._getSpanContextFromOperationArguments.bind(this);\n        fill(collection.prototype, operation, function (orig) {\n            return function () {\n                var args = [];\n                for (var _i = 0; _i < arguments.length; _i++) {\n                    args[_i] = arguments[_i];\n                }\n                var _a, _b, _c, _d;\n                var lastArg = args[args.length - 1];\n                var scope = getCurrentHub().getScope();\n                var parentSpan = (_a = scope) === null || _a === void 0 ? void 0 : _a.getSpan();\n                // Check if the operation was passed a callback. (mapReduce requires a different check, as\n                // its (non-callback) arguments can also be functions.)\n                if (typeof lastArg !== 'function' || (operation === 'mapReduce' && args.length === 2)) {\n                    var span_1 = (_b = parentSpan) === null || _b === void 0 ? void 0 : _b.startChild(getSpanContext(this, operation, args));\n                    var maybePromise = orig.call.apply(orig, __spread([this], args));\n                    if (isThenable(maybePromise)) {\n                        return maybePromise.then(function (res) {\n                            var _a;\n                            (_a = span_1) === null || _a === void 0 ? void 0 : _a.finish();\n                            return res;\n                        });\n                    }\n                    else {\n                        (_c = span_1) === null || _c === void 0 ? void 0 : _c.finish();\n                        return maybePromise;\n                    }\n                }\n                var span = (_d = parentSpan) === null || _d === void 0 ? void 0 : _d.startChild(getSpanContext(this, operation, args.slice(0, -1)));\n                return orig.call.apply(orig, __spread([this], args.slice(0, -1), [function (err, result) {\n                        var _a;\n                        (_a = span) === null || _a === void 0 ? void 0 : _a.finish();\n                        lastArg(err, result);\n                    }]));\n            };\n        });\n    };\n    /**\n     * Form a SpanContext based on the user input to a given operation.\n     */\n    Mongo.prototype._getSpanContextFromOperationArguments = function (collection, operation, args) {\n        var data = {\n            collectionName: collection.collectionName,\n            dbName: collection.dbName,\n            namespace: collection.namespace,\n        };\n        var spanContext = {\n            op: 'db',\n            description: operation,\n            data: data,\n        };\n        // If the operation takes no arguments besides `options` and `callback`, or if argument\n        // collection is disabled for this operation, just return early.\n        var signature = OPERATION_SIGNATURES[operation];\n        var shouldDescribe = Array.isArray(this._describeOperations)\n            ? this._describeOperations.includes(operation)\n            : this._describeOperations;\n        if (!signature || !shouldDescribe) {\n            return spanContext;\n        }\n        try {\n            // Special case for `mapReduce`, as the only one accepting functions as arguments.\n            if (operation === 'mapReduce') {\n                var _a = __read(args, 2), map = _a[0], reduce = _a[1];\n                data[signature[0]] = typeof map === 'string' ? map : map.name || '<anonymous>';\n                data[signature[1]] = typeof reduce === 'string' ? reduce : reduce.name || '<anonymous>';\n            }\n            else {\n                for (var i = 0; i < signature.length; i++) {\n                    data[signature[i]] = JSON.stringify(args[i]);\n                }\n            }\n        }\n        catch (_oO) {\n            // no-empty\n        }\n        return spanContext;\n    };\n    /**\n     * @inheritDoc\n     */\n    Mongo.id = 'Mongo';\n    return Mongo;\n}());\nexport { Mongo };\n//# sourceMappingURL=mongo.js.map","export var TRACEPARENT_REGEXP = new RegExp('^[ \\\\t]*' + // whitespace\n    '([0-9a-f]{32})?' + // trace_id\n    '-?([0-9a-f]{16})?' + // span_id\n    '-?([01])?' + // sampled\n    '[ \\\\t]*$');\n/**\n * Extract transaction context data from a `sentry-trace` header.\n *\n * @param traceparent Traceparent string\n *\n * @returns Object containing data from the header, or undefined if traceparent string is malformed\n */\nexport function extractTraceparentData(traceparent) {\n    var matches = traceparent.match(TRACEPARENT_REGEXP);\n    if (matches) {\n        var parentSampled = void 0;\n        if (matches[3] === '1') {\n            parentSampled = true;\n        }\n        else if (matches[3] === '0') {\n            parentSampled = false;\n        }\n        return {\n            traceId: matches[1],\n            parentSampled: parentSampled,\n            parentSpanId: matches[2],\n        };\n    }\n    return undefined;\n}\n//# sourceMappingURL=tracing.js.map","import { getGlobalObject, logger } from '@sentry/utils';\nimport { FINISH_REASON_TAG, IDLE_TRANSACTION_FINISH_REASONS } from '../constants';\nimport { getActiveTransaction } from '../utils';\nvar global = getGlobalObject();\n/**\n * Add a listener that cancels and finishes a transaction when the global\n * document is hidden.\n */\nexport function registerBackgroundTabDetection() {\n    if (global && global.document) {\n        global.document.addEventListener('visibilitychange', function () {\n            var activeTransaction = getActiveTransaction();\n            if (global.document.hidden && activeTransaction) {\n                var statusType = 'cancelled';\n                logger.log(\"[Tracing] Transaction: \" + statusType + \" -> since tab moved to the background, op: \" + activeTransaction.op);\n                // We should not set status if it is already set, this prevent important statuses like\n                // error or data loss from being overwritten on transaction.\n                if (!activeTransaction.status) {\n                    activeTransaction.setStatus(statusType);\n                }\n                activeTransaction.setTag('visibilitychange', 'document.hidden');\n                activeTransaction.setTag(FINISH_REASON_TAG, IDLE_TRANSACTION_FINISH_REASONS[2]);\n                activeTransaction.finish();\n            }\n        });\n    }\n    else {\n        logger.warn('[Tracing] Could not set up background tab detection due to lack of global document');\n    }\n}\n//# sourceMappingURL=backgroundtab.js.map","/*\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nexport var bindReporter = function (callback, metric, reportAllChanges) {\n    var prevValue;\n    return function (forceReport) {\n        if (metric.value >= 0) {\n            if (forceReport || reportAllChanges) {\n                metric.delta = metric.value - (prevValue || 0);\n                // Report the metric if there's a non-zero delta or if no previous\n                // value exists (which can happen in the case of the document becoming\n                // hidden when the metric value is 0).\n                // See: https://github.com/GoogleChrome/web-vitals/issues/14\n                if (metric.delta || prevValue === undefined) {\n                    prevValue = metric.value;\n                    callback(metric);\n                }\n            }\n        }\n    };\n};\n//# sourceMappingURL=bindReporter.js.map","/*\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { generateUniqueID } from './generateUniqueID';\nexport var initMetric = function (name, value) {\n    return {\n        name: name,\n        value: (value !== null && value !== void 0 ? value : -1),\n        delta: 0,\n        entries: [],\n        id: generateUniqueID(),\n    };\n};\n//# sourceMappingURL=initMetric.js.map","/*\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Performantly generate a unique, 30-char string by combining a version\n * number, the current timestamp with a 13-digit number integer.\n * @return {string}\n */\nexport var generateUniqueID = function () {\n    return \"v2-\" + Date.now() + \"-\" + (Math.floor(Math.random() * (9e12 - 1)) + 1e12);\n};\n//# sourceMappingURL=generateUniqueID.js.map","/*\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Takes a performance entry type and a callback function, and creates a\n * `PerformanceObserver` instance that will observe the specified entry type\n * with buffering enabled and call the callback _for each entry_.\n *\n * This function also feature-detects entry support and wraps the logic in a\n * try/catch to avoid errors in unsupporting browsers.\n */\nexport var observe = function (type, callback) {\n    try {\n        if (PerformanceObserver.supportedEntryTypes.includes(type)) {\n            // More extensive feature detect needed for Firefox due to:\n            // https://github.com/GoogleChrome/web-vitals/issues/142\n            if (type === 'first-input' && !('PerformanceEventTiming' in self)) {\n                return;\n            }\n            var po = new PerformanceObserver(function (l) { return l.getEntries().map(callback); });\n            po.observe({ type: type, buffered: true });\n            return po;\n        }\n    }\n    catch (e) {\n        // Do nothing.\n    }\n    return;\n};\n//# sourceMappingURL=observe.js.map","/*\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { getGlobalObject } from '@sentry/utils';\nexport var onHidden = function (cb, once) {\n    var onHiddenOrPageHide = function (event) {\n        if (event.type === 'pagehide' || getGlobalObject().document.visibilityState === 'hidden') {\n            cb(event);\n            if (once) {\n                removeEventListener('visibilitychange', onHiddenOrPageHide, true);\n                removeEventListener('pagehide', onHiddenOrPageHide, true);\n            }\n        }\n    };\n    addEventListener('visibilitychange', onHiddenOrPageHide, true);\n    // Some browsers have buggy implementations of visibilitychange,\n    // so we use pagehide in addition, just to be safe.\n    addEventListener('pagehide', onHiddenOrPageHide, true);\n};\n//# sourceMappingURL=onHidden.js.map","/*\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { getGlobalObject } from '@sentry/utils';\nimport { onHidden } from './onHidden';\nvar firstHiddenTime = -1;\nvar initHiddenTime = function () {\n    return getGlobalObject().document.visibilityState === 'hidden' ? 0 : Infinity;\n};\nvar trackChanges = function () {\n    // Update the time if/when the document becomes hidden.\n    onHidden(function (_a) {\n        var timeStamp = _a.timeStamp;\n        firstHiddenTime = timeStamp;\n    }, true);\n};\nexport var getVisibilityWatcher = function () {\n    if (firstHiddenTime < 0) {\n        // If the document is hidden when this code runs, assume it was hidden\n        // since navigation start. This isn't a perfect heuristic, but it's the\n        // best we can do until an API is available to support querying past\n        // visibilityState.\n        firstHiddenTime = initHiddenTime();\n        trackChanges();\n    }\n    return {\n        get firstHiddenTime() {\n            return firstHiddenTime;\n        },\n    };\n};\n//# sourceMappingURL=getVisibilityWatcher.js.map","/*\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { bindReporter } from './lib/bindReporter';\nimport { getVisibilityWatcher } from './lib/getVisibilityWatcher';\nimport { initMetric } from './lib/initMetric';\nimport { observe } from './lib/observe';\nimport { onHidden } from './lib/onHidden';\nvar reportedMetricIDs = {};\nexport var getLCP = function (onReport, reportAllChanges) {\n    var visibilityWatcher = getVisibilityWatcher();\n    var metric = initMetric('LCP');\n    var report;\n    var entryHandler = function (entry) {\n        // The startTime attribute returns the value of the renderTime if it is not 0,\n        // and the value of the loadTime otherwise.\n        var value = entry.startTime;\n        // If the page was hidden prior to paint time of the entry,\n        // ignore it and mark the metric as final, otherwise add the entry.\n        if (value < visibilityWatcher.firstHiddenTime) {\n            metric.value = value;\n            metric.entries.push(entry);\n        }\n        if (report) {\n            report();\n        }\n    };\n    var po = observe('largest-contentful-paint', entryHandler);\n    if (po) {\n        report = bindReporter(onReport, metric, reportAllChanges);\n        var stopListening_1 = function () {\n            if (!reportedMetricIDs[metric.id]) {\n                po.takeRecords().map(entryHandler);\n                po.disconnect();\n                reportedMetricIDs[metric.id] = true;\n                report(true);\n            }\n        };\n        // Stop listening after input. Note: while scrolling is an input that\n        // stop LCP observation, it's unreliable since it can be programmatically\n        // generated. See: https://github.com/GoogleChrome/web-vitals/issues/75\n        ['keydown', 'click'].forEach(function (type) {\n            addEventListener(type, stopListening_1, { once: true, capture: true });\n        });\n        onHidden(stopListening_1, true);\n    }\n};\n//# sourceMappingURL=getLCP.js.map","import { __assign, __rest } from \"tslib\";\nimport { browserPerformanceTimeOrigin, getGlobalObject, htmlTreeAsString, isNodeEnv, logger } from '@sentry/utils';\nimport { msToSec } from '../utils';\nimport { getCLS } from './web-vitals/getCLS';\nimport { getFID } from './web-vitals/getFID';\nimport { getLCP } from './web-vitals/getLCP';\nimport { getVisibilityWatcher } from './web-vitals/lib/getVisibilityWatcher';\nvar global = getGlobalObject();\n/** Class tracking metrics  */\nvar MetricsInstrumentation = /** @class */ (function () {\n    function MetricsInstrumentation(_reportAllChanges) {\n        if (_reportAllChanges === void 0) { _reportAllChanges = false; }\n        this._reportAllChanges = _reportAllChanges;\n        this._measurements = {};\n        this._performanceCursor = 0;\n        if (!isNodeEnv() && global && global.performance && global.document) {\n            if (global.performance.mark) {\n                global.performance.mark('sentry-tracing-init');\n            }\n            this._trackCLS();\n            this._trackLCP();\n            this._trackFID();\n        }\n    }\n    /** Add performance related spans to a transaction */\n    MetricsInstrumentation.prototype.addPerformanceEntries = function (transaction) {\n        var _this = this;\n        if (!global || !global.performance || !global.performance.getEntries || !browserPerformanceTimeOrigin) {\n            // Gatekeeper if performance API not available\n            return;\n        }\n        logger.log('[Tracing] Adding & adjusting spans using Performance API');\n        var timeOrigin = msToSec(browserPerformanceTimeOrigin);\n        var responseStartTimestamp;\n        var requestStartTimestamp;\n        global.performance\n            .getEntries()\n            .slice(this._performanceCursor)\n            .forEach(function (entry) {\n            var startTime = msToSec(entry.startTime);\n            var duration = msToSec(entry.duration);\n            if (transaction.op === 'navigation' && timeOrigin + startTime < transaction.startTimestamp) {\n                return;\n            }\n            switch (entry.entryType) {\n                case 'navigation': {\n                    addNavigationSpans(transaction, entry, timeOrigin);\n                    responseStartTimestamp = timeOrigin + msToSec(entry.responseStart);\n                    requestStartTimestamp = timeOrigin + msToSec(entry.requestStart);\n                    break;\n                }\n                case 'mark':\n                case 'paint':\n                case 'measure': {\n                    var startTimestamp = addMeasureSpans(transaction, entry, startTime, duration, timeOrigin);\n                    // capture web vitals\n                    var firstHidden = getVisibilityWatcher();\n                    // Only report if the page wasn't hidden prior to the web vital.\n                    var shouldRecord = entry.startTime < firstHidden.firstHiddenTime;\n                    if (entry.name === 'first-paint' && shouldRecord) {\n                        logger.log('[Measurements] Adding FP');\n                        _this._measurements['fp'] = { value: entry.startTime };\n                        _this._measurements['mark.fp'] = { value: startTimestamp };\n                    }\n                    if (entry.name === 'first-contentful-paint' && shouldRecord) {\n                        logger.log('[Measurements] Adding FCP');\n                        _this._measurements['fcp'] = { value: entry.startTime };\n                        _this._measurements['mark.fcp'] = { value: startTimestamp };\n                    }\n                    break;\n                }\n                case 'resource': {\n                    var resourceName = entry.name.replace(global.location.origin, '');\n                    addResourceSpans(transaction, entry, resourceName, startTime, duration, timeOrigin);\n                    break;\n                }\n                default:\n                // Ignore other entry types.\n            }\n        });\n        this._performanceCursor = Math.max(performance.getEntries().length - 1, 0);\n        this._trackNavigator(transaction);\n        // Measurements are only available for pageload transactions\n        if (transaction.op === 'pageload') {\n            // normalize applicable web vital values to be relative to transaction.startTimestamp\n            var timeOrigin_1 = msToSec(browserPerformanceTimeOrigin);\n            // Generate TTFB (Time to First Byte), which measured as the time between the beginning of the transaction and the\n            // start of the response in milliseconds\n            if (typeof responseStartTimestamp === 'number') {\n                logger.log('[Measurements] Adding TTFB');\n                this._measurements['ttfb'] = { value: (responseStartTimestamp - transaction.startTimestamp) * 1000 };\n                if (typeof requestStartTimestamp === 'number' && requestStartTimestamp <= responseStartTimestamp) {\n                    // Capture the time spent making the request and receiving the first byte of the response.\n                    // This is the time between the start of the request and the start of the response in milliseconds.\n                    this._measurements['ttfb.requestTime'] = { value: (responseStartTimestamp - requestStartTimestamp) * 1000 };\n                }\n            }\n            ['fcp', 'fp', 'lcp'].forEach(function (name) {\n                if (!_this._measurements[name] || timeOrigin_1 >= transaction.startTimestamp) {\n                    return;\n                }\n                // The web vitals, fcp, fp, lcp, and ttfb, all measure relative to timeOrigin.\n                // Unfortunately, timeOrigin is not captured within the transaction span data, so these web vitals will need\n                // to be adjusted to be relative to transaction.startTimestamp.\n                var oldValue = _this._measurements[name].value;\n                var measurementTimestamp = timeOrigin_1 + msToSec(oldValue);\n                // normalizedValue should be in milliseconds\n                var normalizedValue = Math.abs((measurementTimestamp - transaction.startTimestamp) * 1000);\n                var delta = normalizedValue - oldValue;\n                logger.log(\"[Measurements] Normalized \" + name + \" from \" + oldValue + \" to \" + normalizedValue + \" (\" + delta + \")\");\n                _this._measurements[name].value = normalizedValue;\n            });\n            if (this._measurements['mark.fid'] && this._measurements['fid']) {\n                // create span for FID\n                _startChild(transaction, {\n                    description: 'first input delay',\n                    endTimestamp: this._measurements['mark.fid'].value + msToSec(this._measurements['fid'].value),\n                    op: 'web.vitals',\n                    startTimestamp: this._measurements['mark.fid'].value,\n                });\n            }\n            // If FCP is not recorded we should not record the cls value\n            // according to the new definition of CLS.\n            if (!('fcp' in this._measurements)) {\n                delete this._measurements.cls;\n            }\n            transaction.setMeasurements(this._measurements);\n            tagMetricInfo(transaction, this._lcpEntry, this._clsEntry);\n            transaction.setTag('sentry_reportAllChanges', this._reportAllChanges);\n        }\n    };\n    /**\n     * Capture the information of the user agent.\n     */\n    MetricsInstrumentation.prototype._trackNavigator = function (transaction) {\n        var navigator = global.navigator;\n        if (!navigator) {\n            return;\n        }\n        // track network connectivity\n        var connection = navigator.connection;\n        if (connection) {\n            if (connection.effectiveType) {\n                transaction.setTag('effectiveConnectionType', connection.effectiveType);\n            }\n            if (connection.type) {\n                transaction.setTag('connectionType', connection.type);\n            }\n            if (isMeasurementValue(connection.rtt)) {\n                this._measurements['connection.rtt'] = { value: connection.rtt };\n            }\n            if (isMeasurementValue(connection.downlink)) {\n                this._measurements['connection.downlink'] = { value: connection.downlink };\n            }\n        }\n        if (isMeasurementValue(navigator.deviceMemory)) {\n            transaction.setTag('deviceMemory', String(navigator.deviceMemory));\n        }\n        if (isMeasurementValue(navigator.hardwareConcurrency)) {\n            transaction.setTag('hardwareConcurrency', String(navigator.hardwareConcurrency));\n        }\n    };\n    /** Starts tracking the Cumulative Layout Shift on the current page. */\n    MetricsInstrumentation.prototype._trackCLS = function () {\n        var _this = this;\n        // See:\n        // https://web.dev/evolving-cls/\n        // https://web.dev/cls-web-tooling/\n        getCLS(function (metric) {\n            var entry = metric.entries.pop();\n            if (!entry) {\n                return;\n            }\n            logger.log('[Measurements] Adding CLS');\n            _this._measurements['cls'] = { value: metric.value };\n            _this._clsEntry = entry;\n        });\n    };\n    /** Starts tracking the Largest Contentful Paint on the current page. */\n    MetricsInstrumentation.prototype._trackLCP = function () {\n        var _this = this;\n        getLCP(function (metric) {\n            var entry = metric.entries.pop();\n            if (!entry) {\n                return;\n            }\n            var timeOrigin = msToSec(browserPerformanceTimeOrigin);\n            var startTime = msToSec(entry.startTime);\n            logger.log('[Measurements] Adding LCP');\n            _this._measurements['lcp'] = { value: metric.value };\n            _this._measurements['mark.lcp'] = { value: timeOrigin + startTime };\n            _this._lcpEntry = entry;\n        }, this._reportAllChanges);\n    };\n    /** Starts tracking the First Input Delay on the current page. */\n    MetricsInstrumentation.prototype._trackFID = function () {\n        var _this = this;\n        getFID(function (metric) {\n            var entry = metric.entries.pop();\n            if (!entry) {\n                return;\n            }\n            var timeOrigin = msToSec(browserPerformanceTimeOrigin);\n            var startTime = msToSec(entry.startTime);\n            logger.log('[Measurements] Adding FID');\n            _this._measurements['fid'] = { value: metric.value };\n            _this._measurements['mark.fid'] = { value: timeOrigin + startTime };\n        });\n    };\n    return MetricsInstrumentation;\n}());\nexport { MetricsInstrumentation };\n/** Instrument navigation entries */\nfunction addNavigationSpans(transaction, entry, timeOrigin) {\n    ['unloadEvent', 'redirect', 'domContentLoadedEvent', 'loadEvent', 'connect'].forEach(function (event) {\n        addPerformanceNavigationTiming(transaction, entry, event, timeOrigin);\n    });\n    addPerformanceNavigationTiming(transaction, entry, 'secureConnection', timeOrigin, 'TLS/SSL', 'connectEnd');\n    addPerformanceNavigationTiming(transaction, entry, 'fetch', timeOrigin, 'cache', 'domainLookupStart');\n    addPerformanceNavigationTiming(transaction, entry, 'domainLookup', timeOrigin, 'DNS');\n    addRequest(transaction, entry, timeOrigin);\n}\n/** Create measure related spans */\nfunction addMeasureSpans(transaction, entry, startTime, duration, timeOrigin) {\n    var measureStartTimestamp = timeOrigin + startTime;\n    var measureEndTimestamp = measureStartTimestamp + duration;\n    _startChild(transaction, {\n        description: entry.name,\n        endTimestamp: measureEndTimestamp,\n        op: entry.entryType,\n        startTimestamp: measureStartTimestamp,\n    });\n    return measureStartTimestamp;\n}\n/** Create resource-related spans */\nexport function addResourceSpans(transaction, entry, resourceName, startTime, duration, timeOrigin) {\n    // we already instrument based on fetch and xhr, so we don't need to\n    // duplicate spans here.\n    if (entry.initiatorType === 'xmlhttprequest' || entry.initiatorType === 'fetch') {\n        return;\n    }\n    var data = {};\n    if ('transferSize' in entry) {\n        data['Transfer Size'] = entry.transferSize;\n    }\n    if ('encodedBodySize' in entry) {\n        data['Encoded Body Size'] = entry.encodedBodySize;\n    }\n    if ('decodedBodySize' in entry) {\n        data['Decoded Body Size'] = entry.decodedBodySize;\n    }\n    var startTimestamp = timeOrigin + startTime;\n    var endTimestamp = startTimestamp + duration;\n    _startChild(transaction, {\n        description: resourceName,\n        endTimestamp: endTimestamp,\n        op: entry.initiatorType ? \"resource.\" + entry.initiatorType : 'resource',\n        startTimestamp: startTimestamp,\n        data: data,\n    });\n}\n/** Create performance navigation related spans */\nfunction addPerformanceNavigationTiming(transaction, entry, event, timeOrigin, description, eventEnd) {\n    var end = eventEnd ? entry[eventEnd] : entry[event + \"End\"];\n    var start = entry[event + \"Start\"];\n    if (!start || !end) {\n        return;\n    }\n    _startChild(transaction, {\n        op: 'browser',\n        description: (description !== null && description !== void 0 ? description : event),\n        startTimestamp: timeOrigin + msToSec(start),\n        endTimestamp: timeOrigin + msToSec(end),\n    });\n}\n/** Create request and response related spans */\nfunction addRequest(transaction, entry, timeOrigin) {\n    _startChild(transaction, {\n        op: 'browser',\n        description: 'request',\n        startTimestamp: timeOrigin + msToSec(entry.requestStart),\n        endTimestamp: timeOrigin + msToSec(entry.responseEnd),\n    });\n    _startChild(transaction, {\n        op: 'browser',\n        description: 'response',\n        startTimestamp: timeOrigin + msToSec(entry.responseStart),\n        endTimestamp: timeOrigin + msToSec(entry.responseEnd),\n    });\n}\n/**\n * Helper function to start child on transactions. This function will make sure that the transaction will\n * use the start timestamp of the created child span if it is earlier than the transactions actual\n * start timestamp.\n */\nexport function _startChild(transaction, _a) {\n    var startTimestamp = _a.startTimestamp, ctx = __rest(_a, [\"startTimestamp\"]);\n    if (startTimestamp && transaction.startTimestamp > startTimestamp) {\n        transaction.startTimestamp = startTimestamp;\n    }\n    return transaction.startChild(__assign({ startTimestamp: startTimestamp }, ctx));\n}\n/**\n * Checks if a given value is a valid measurement value.\n */\nfunction isMeasurementValue(value) {\n    return typeof value === 'number' && isFinite(value);\n}\n/** Add LCP / CLS data to transaction to allow debugging */\nfunction tagMetricInfo(transaction, lcpEntry, clsEntry) {\n    if (lcpEntry) {\n        logger.log('[Measurements] Adding LCP Data');\n        // Capture Properties of the LCP element that contributes to the LCP.\n        if (lcpEntry.element) {\n            transaction.setTag('lcp.element', htmlTreeAsString(lcpEntry.element));\n        }\n        if (lcpEntry.id) {\n            transaction.setTag('lcp.id', lcpEntry.id);\n        }\n        if (lcpEntry.url) {\n            // Trim URL to the first 200 characters.\n            transaction.setTag('lcp.url', lcpEntry.url.trim().slice(0, 200));\n        }\n        transaction.setTag('lcp.size', lcpEntry.size);\n    }\n    // See: https://developer.mozilla.org/en-US/docs/Web/API/LayoutShift\n    if (clsEntry && clsEntry.sources) {\n        logger.log('[Measurements] Adding CLS Data');\n        clsEntry.sources.forEach(function (source, index) {\n            return transaction.setTag(\"cls.source.\" + (index + 1), htmlTreeAsString(source.node));\n        });\n    }\n}\n//# sourceMappingURL=metrics.js.map","/*\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { bindReporter } from './lib/bindReporter';\nimport { initMetric } from './lib/initMetric';\nimport { observe } from './lib/observe';\nimport { onHidden } from './lib/onHidden';\nexport var getCLS = function (onReport, reportAllChanges) {\n    var metric = initMetric('CLS', 0);\n    var report;\n    var sessionValue = 0;\n    var sessionEntries = [];\n    var entryHandler = function (entry) {\n        // Only count layout shifts without recent user input.\n        // TODO: Figure out why entry can be undefined\n        if (entry && !entry.hadRecentInput) {\n            var firstSessionEntry = sessionEntries[0];\n            var lastSessionEntry = sessionEntries[sessionEntries.length - 1];\n            // If the entry occurred less than 1 second after the previous entry and\n            // less than 5 seconds after the first entry in the session, include the\n            // entry in the current session. Otherwise, start a new session.\n            if (sessionValue &&\n                sessionEntries.length !== 0 &&\n                entry.startTime - lastSessionEntry.startTime < 1000 &&\n                entry.startTime - firstSessionEntry.startTime < 5000) {\n                sessionValue += entry.value;\n                sessionEntries.push(entry);\n            }\n            else {\n                sessionValue = entry.value;\n                sessionEntries = [entry];\n            }\n            // If the current session value is larger than the current CLS value,\n            // update CLS and the entries contributing to it.\n            if (sessionValue > metric.value) {\n                metric.value = sessionValue;\n                metric.entries = sessionEntries;\n                if (report) {\n                    report();\n                }\n            }\n        }\n    };\n    var po = observe('layout-shift', entryHandler);\n    if (po) {\n        report = bindReporter(onReport, metric, reportAllChanges);\n        onHidden(function () {\n            po.takeRecords().map(entryHandler);\n            report(true);\n        });\n    }\n};\n//# sourceMappingURL=getCLS.js.map","/*\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { bindReporter } from './lib/bindReporter';\nimport { getVisibilityWatcher } from './lib/getVisibilityWatcher';\nimport { initMetric } from './lib/initMetric';\nimport { observe } from './lib/observe';\nimport { onHidden } from './lib/onHidden';\nexport var getFID = function (onReport, reportAllChanges) {\n    var visibilityWatcher = getVisibilityWatcher();\n    var metric = initMetric('FID');\n    var report;\n    var entryHandler = function (entry) {\n        // Only report if the page wasn't hidden prior to the first input.\n        if (report && entry.startTime < visibilityWatcher.firstHiddenTime) {\n            metric.value = entry.processingStart - entry.startTime;\n            metric.entries.push(entry);\n            report(true);\n        }\n    };\n    var po = observe('first-input', entryHandler);\n    if (po) {\n        report = bindReporter(onReport, metric, reportAllChanges);\n        onHidden(function () {\n            po.takeRecords().map(entryHandler);\n            po.disconnect();\n        }, true);\n    }\n};\n//# sourceMappingURL=getFID.js.map","import { __assign, __read, __spread } from \"tslib\";\nimport { addInstrumentationHandler, isInstanceOf, isMatchingPattern } from '@sentry/utils';\nimport { getActiveTransaction, hasTracingEnabled } from '../utils';\nexport var DEFAULT_TRACING_ORIGINS = ['localhost', /^\\//];\nexport var defaultRequestInstrumentationOptions = {\n    traceFetch: true,\n    traceXHR: true,\n    tracingOrigins: DEFAULT_TRACING_ORIGINS,\n};\n/** Registers span creators for xhr and fetch requests  */\nexport function instrumentOutgoingRequests(_options) {\n    // eslint-disable-next-line @typescript-eslint/unbound-method\n    var _a = __assign(__assign({}, defaultRequestInstrumentationOptions), _options), traceFetch = _a.traceFetch, traceXHR = _a.traceXHR, tracingOrigins = _a.tracingOrigins, shouldCreateSpanForRequest = _a.shouldCreateSpanForRequest;\n    // We should cache url -> decision so that we don't have to compute\n    // regexp everytime we create a request.\n    var urlMap = {};\n    var defaultShouldCreateSpan = function (url) {\n        if (urlMap[url]) {\n            return urlMap[url];\n        }\n        var origins = tracingOrigins;\n        urlMap[url] =\n            origins.some(function (origin) { return isMatchingPattern(url, origin); }) &&\n                !isMatchingPattern(url, 'sentry_key');\n        return urlMap[url];\n    };\n    // We want that our users don't have to re-implement shouldCreateSpanForRequest themselves\n    // That's why we filter out already unwanted Spans from tracingOrigins\n    var shouldCreateSpan = defaultShouldCreateSpan;\n    if (typeof shouldCreateSpanForRequest === 'function') {\n        shouldCreateSpan = function (url) {\n            return defaultShouldCreateSpan(url) && shouldCreateSpanForRequest(url);\n        };\n    }\n    var spans = {};\n    if (traceFetch) {\n        addInstrumentationHandler('fetch', function (handlerData) {\n            fetchCallback(handlerData, shouldCreateSpan, spans);\n        });\n    }\n    if (traceXHR) {\n        addInstrumentationHandler('xhr', function (handlerData) {\n            xhrCallback(handlerData, shouldCreateSpan, spans);\n        });\n    }\n}\n/**\n * Create and track fetch request spans\n */\nexport function fetchCallback(handlerData, shouldCreateSpan, spans) {\n    if (!hasTracingEnabled() || !(handlerData.fetchData && shouldCreateSpan(handlerData.fetchData.url))) {\n        return;\n    }\n    if (handlerData.endTimestamp) {\n        var spanId = handlerData.fetchData.__span;\n        if (!spanId)\n            return;\n        var span = spans[spanId];\n        if (span) {\n            if (handlerData.response) {\n                // TODO (kmclb) remove this once types PR goes through\n                // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n                span.setHttpStatus(handlerData.response.status);\n            }\n            else if (handlerData.error) {\n                span.setStatus('internal_error');\n            }\n            span.finish();\n            // eslint-disable-next-line @typescript-eslint/no-dynamic-delete\n            delete spans[spanId];\n        }\n        return;\n    }\n    var activeTransaction = getActiveTransaction();\n    if (activeTransaction) {\n        var span = activeTransaction.startChild({\n            data: __assign(__assign({}, handlerData.fetchData), { type: 'fetch' }),\n            description: handlerData.fetchData.method + \" \" + handlerData.fetchData.url,\n            op: 'http.client',\n        });\n        handlerData.fetchData.__span = span.spanId;\n        spans[span.spanId] = span;\n        var request = (handlerData.args[0] = handlerData.args[0]);\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        var options = (handlerData.args[1] = handlerData.args[1] || {});\n        var headers = options.headers;\n        if (isInstanceOf(request, Request)) {\n            headers = request.headers;\n        }\n        if (headers) {\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n            if (typeof headers.append === 'function') {\n                // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n                headers.append('sentry-trace', span.toTraceparent());\n            }\n            else if (Array.isArray(headers)) {\n                headers = __spread(headers, [['sentry-trace', span.toTraceparent()]]);\n            }\n            else {\n                headers = __assign(__assign({}, headers), { 'sentry-trace': span.toTraceparent() });\n            }\n        }\n        else {\n            headers = { 'sentry-trace': span.toTraceparent() };\n        }\n        options.headers = headers;\n    }\n}\n/**\n * Create and track xhr request spans\n */\nexport function xhrCallback(handlerData, shouldCreateSpan, spans) {\n    if (!hasTracingEnabled() ||\n        (handlerData.xhr && handlerData.xhr.__sentry_own_request__) ||\n        !(handlerData.xhr && handlerData.xhr.__sentry_xhr__ && shouldCreateSpan(handlerData.xhr.__sentry_xhr__.url))) {\n        return;\n    }\n    var xhr = handlerData.xhr.__sentry_xhr__;\n    // check first if the request has finished and is tracked by an existing span which should now end\n    if (handlerData.endTimestamp) {\n        var spanId = handlerData.xhr.__sentry_xhr_span_id__;\n        if (!spanId)\n            return;\n        var span = spans[spanId];\n        if (span) {\n            span.setHttpStatus(xhr.status_code);\n            span.finish();\n            // eslint-disable-next-line @typescript-eslint/no-dynamic-delete\n            delete spans[spanId];\n        }\n        return;\n    }\n    // if not, create a new span to track it\n    var activeTransaction = getActiveTransaction();\n    if (activeTransaction) {\n        var span = activeTransaction.startChild({\n            data: __assign(__assign({}, xhr.data), { type: 'xhr', method: xhr.method, url: xhr.url }),\n            description: xhr.method + \" \" + xhr.url,\n            op: 'http.client',\n        });\n        handlerData.xhr.__sentry_xhr_span_id__ = span.spanId;\n        spans[handlerData.xhr.__sentry_xhr_span_id__] = span;\n        if (handlerData.xhr.setRequestHeader) {\n            try {\n                handlerData.xhr.setRequestHeader('sentry-trace', span.toTraceparent());\n            }\n            catch (_) {\n                // Error: InvalidStateError: Failed to execute 'setRequestHeader' on 'XMLHttpRequest': The object's state must be OPENED.\n            }\n        }\n    }\n}\n//# sourceMappingURL=request.js.map","import { addInstrumentationHandler, getGlobalObject, logger } from '@sentry/utils';\nvar global = getGlobalObject();\n/**\n * Default function implementing pageload and navigation transactions\n */\nexport function instrumentRoutingWithDefaults(customStartTransaction, startTransactionOnPageLoad, startTransactionOnLocationChange) {\n    if (startTransactionOnPageLoad === void 0) { startTransactionOnPageLoad = true; }\n    if (startTransactionOnLocationChange === void 0) { startTransactionOnLocationChange = true; }\n    if (!global || !global.location) {\n        logger.warn('Could not initialize routing instrumentation due to invalid location');\n        return;\n    }\n    var startingUrl = global.location.href;\n    var activeTransaction;\n    if (startTransactionOnPageLoad) {\n        activeTransaction = customStartTransaction({ name: global.location.pathname, op: 'pageload' });\n    }\n    if (startTransactionOnLocationChange) {\n        addInstrumentationHandler('history', function (_a) {\n            var to = _a.to, from = _a.from;\n            /**\n             * This early return is there to account for some cases where a navigation transaction starts right after\n             * long-running pageload. We make sure that if `from` is undefined and a valid `startingURL` exists, we don't\n             * create an uneccessary navigation transaction.\n             *\n             * This was hard to duplicate, but this behavior stopped as soon as this fix was applied. This issue might also\n             * only be caused in certain development environments where the usage of a hot module reloader is causing\n             * errors.\n             */\n            if (from === undefined && startingUrl && startingUrl.indexOf(to) !== -1) {\n                startingUrl = undefined;\n                return;\n            }\n            if (from !== to) {\n                startingUrl = undefined;\n                if (activeTransaction) {\n                    logger.log(\"[Tracing] Finishing current transaction with op: \" + activeTransaction.op);\n                    // If there's an open transaction on the scope, we need to finish it before creating an new one.\n                    activeTransaction.finish();\n                }\n                activeTransaction = customStartTransaction({ name: global.location.pathname, op: 'navigation' });\n            }\n        });\n    }\n}\n//# sourceMappingURL=router.js.map","/** The status of an Span.\n *\n * @deprecated Use string literals - if you require type casting, cast to SpanStatusType type\n */\n// eslint-disable-next-line import/export\nexport var SpanStatus;\n(function (SpanStatus) {\n    /** The operation completed successfully. */\n    SpanStatus[\"Ok\"] = \"ok\";\n    /** Deadline expired before operation could complete. */\n    SpanStatus[\"DeadlineExceeded\"] = \"deadline_exceeded\";\n    /** 401 Unauthorized (actually does mean unauthenticated according to RFC 7235) */\n    SpanStatus[\"Unauthenticated\"] = \"unauthenticated\";\n    /** 403 Forbidden */\n    SpanStatus[\"PermissionDenied\"] = \"permission_denied\";\n    /** 404 Not Found. Some requested entity (file or directory) was not found. */\n    SpanStatus[\"NotFound\"] = \"not_found\";\n    /** 429 Too Many Requests */\n    SpanStatus[\"ResourceExhausted\"] = \"resource_exhausted\";\n    /** Client specified an invalid argument. 4xx. */\n    SpanStatus[\"InvalidArgument\"] = \"invalid_argument\";\n    /** 501 Not Implemented */\n    SpanStatus[\"Unimplemented\"] = \"unimplemented\";\n    /** 503 Service Unavailable */\n    SpanStatus[\"Unavailable\"] = \"unavailable\";\n    /** Other/generic 5xx. */\n    SpanStatus[\"InternalError\"] = \"internal_error\";\n    /** Unknown. Any non-standard HTTP status code. */\n    SpanStatus[\"UnknownError\"] = \"unknown_error\";\n    /** The operation was cancelled (typically by the user). */\n    SpanStatus[\"Cancelled\"] = \"cancelled\";\n    /** Already exists (409) */\n    SpanStatus[\"AlreadyExists\"] = \"already_exists\";\n    /** Operation was rejected because the system is not in a state required for the operation's */\n    SpanStatus[\"FailedPrecondition\"] = \"failed_precondition\";\n    /** The operation was aborted, typically due to a concurrency issue. */\n    SpanStatus[\"Aborted\"] = \"aborted\";\n    /** Operation was attempted past the valid range. */\n    SpanStatus[\"OutOfRange\"] = \"out_of_range\";\n    /** Unrecoverable data loss or corruption */\n    SpanStatus[\"DataLoss\"] = \"data_loss\";\n})(SpanStatus || (SpanStatus = {}));\n//# sourceMappingURL=spanstatus.js.map","import { __assign } from \"tslib\";\nimport { getGlobalObject, logger } from '@sentry/utils';\nimport { startIdleTransaction } from '../hubextensions';\nimport { DEFAULT_IDLE_TIMEOUT } from '../idletransaction';\nimport { extractTraceparentData, secToMs } from '../utils';\nimport { registerBackgroundTabDetection } from './backgroundtab';\nimport { MetricsInstrumentation } from './metrics';\nimport { defaultRequestInstrumentationOptions, instrumentOutgoingRequests, } from './request';\nimport { instrumentRoutingWithDefaults } from './router';\nexport var DEFAULT_MAX_TRANSACTION_DURATION_SECONDS = 600;\nvar DEFAULT_BROWSER_TRACING_OPTIONS = __assign({ idleTimeout: DEFAULT_IDLE_TIMEOUT, markBackgroundTransactions: true, maxTransactionDuration: DEFAULT_MAX_TRANSACTION_DURATION_SECONDS, routingInstrumentation: instrumentRoutingWithDefaults, startTransactionOnLocationChange: true, startTransactionOnPageLoad: true }, defaultRequestInstrumentationOptions);\n/**\n * The Browser Tracing integration automatically instruments browser pageload/navigation\n * actions as transactions, and captures requests, metrics and errors as spans.\n *\n * The integration can be configured with a variety of options, and can be extended to use\n * any routing library. This integration uses {@see IdleTransaction} to create transactions.\n */\nvar BrowserTracing = /** @class */ (function () {\n    function BrowserTracing(_options) {\n        /**\n         * @inheritDoc\n         */\n        this.name = BrowserTracing.id;\n        this._emitOptionsWarning = false;\n        /** Store configured idle timeout so that it can be added as a tag to transactions */\n        this._configuredIdleTimeout = undefined;\n        var tracingOrigins = defaultRequestInstrumentationOptions.tracingOrigins;\n        // NOTE: Logger doesn't work in constructors, as it's initialized after integrations instances\n        if (_options) {\n            this._configuredIdleTimeout = _options.idleTimeout;\n            if (_options.tracingOrigins && Array.isArray(_options.tracingOrigins) && _options.tracingOrigins.length !== 0) {\n                tracingOrigins = _options.tracingOrigins;\n            }\n            else {\n                this._emitOptionsWarning = true;\n            }\n        }\n        this.options = __assign(__assign(__assign({}, DEFAULT_BROWSER_TRACING_OPTIONS), _options), { tracingOrigins: tracingOrigins });\n        var _metricOptions = this.options._metricOptions;\n        this._metrics = new MetricsInstrumentation(_metricOptions && _metricOptions._reportAllChanges);\n    }\n    /**\n     * @inheritDoc\n     */\n    BrowserTracing.prototype.setupOnce = function (_, getCurrentHub) {\n        var _this = this;\n        this._getCurrentHub = getCurrentHub;\n        if (this._emitOptionsWarning) {\n            logger.warn('[Tracing] You need to define `tracingOrigins` in the options. Set an array of urls or patterns to trace.');\n            logger.warn(\"[Tracing] We added a reasonable default for you: \" + defaultRequestInstrumentationOptions.tracingOrigins);\n        }\n        // eslint-disable-next-line @typescript-eslint/unbound-method\n        var _a = this.options, instrumentRouting = _a.routingInstrumentation, startTransactionOnLocationChange = _a.startTransactionOnLocationChange, startTransactionOnPageLoad = _a.startTransactionOnPageLoad, markBackgroundTransactions = _a.markBackgroundTransactions, traceFetch = _a.traceFetch, traceXHR = _a.traceXHR, tracingOrigins = _a.tracingOrigins, shouldCreateSpanForRequest = _a.shouldCreateSpanForRequest;\n        instrumentRouting(function (context) { return _this._createRouteTransaction(context); }, startTransactionOnPageLoad, startTransactionOnLocationChange);\n        if (markBackgroundTransactions) {\n            registerBackgroundTabDetection();\n        }\n        instrumentOutgoingRequests({ traceFetch: traceFetch, traceXHR: traceXHR, tracingOrigins: tracingOrigins, shouldCreateSpanForRequest: shouldCreateSpanForRequest });\n    };\n    /** Create routing idle transaction. */\n    BrowserTracing.prototype._createRouteTransaction = function (context) {\n        var _this = this;\n        if (!this._getCurrentHub) {\n            logger.warn(\"[Tracing] Did not create \" + context.op + \" transaction because _getCurrentHub is invalid.\");\n            return undefined;\n        }\n        // eslint-disable-next-line @typescript-eslint/unbound-method\n        var _a = this.options, beforeNavigate = _a.beforeNavigate, idleTimeout = _a.idleTimeout, maxTransactionDuration = _a.maxTransactionDuration;\n        var parentContextFromHeader = context.op === 'pageload' ? getHeaderContext() : undefined;\n        var expandedContext = __assign(__assign(__assign({}, context), parentContextFromHeader), { trimEnd: true });\n        var modifiedContext = typeof beforeNavigate === 'function' ? beforeNavigate(expandedContext) : expandedContext;\n        // For backwards compatibility reasons, beforeNavigate can return undefined to \"drop\" the transaction (prevent it\n        // from being sent to Sentry).\n        var finalContext = modifiedContext === undefined ? __assign(__assign({}, expandedContext), { sampled: false }) : modifiedContext;\n        if (finalContext.sampled === false) {\n            logger.log(\"[Tracing] Will not send \" + finalContext.op + \" transaction because of beforeNavigate.\");\n        }\n        logger.log(\"[Tracing] Starting \" + finalContext.op + \" transaction on scope\");\n        var hub = this._getCurrentHub();\n        var location = getGlobalObject().location;\n        var idleTransaction = startIdleTransaction(hub, finalContext, idleTimeout, true, { location: location });\n        idleTransaction.registerBeforeFinishCallback(function (transaction, endTimestamp) {\n            _this._metrics.addPerformanceEntries(transaction);\n            adjustTransactionDuration(secToMs(maxTransactionDuration), transaction, endTimestamp);\n        });\n        idleTransaction.setTag('idleTimeout', this._configuredIdleTimeout);\n        return idleTransaction;\n    };\n    /**\n     * @inheritDoc\n     */\n    BrowserTracing.id = 'BrowserTracing';\n    return BrowserTracing;\n}());\nexport { BrowserTracing };\n/**\n * Gets transaction context from a sentry-trace meta.\n *\n * @returns Transaction context data from the header or undefined if there's no header or the header is malformed\n */\nexport function getHeaderContext() {\n    var header = getMetaContent('sentry-trace');\n    if (header) {\n        return extractTraceparentData(header);\n    }\n    return undefined;\n}\n/** Returns the value of a meta tag */\nexport function getMetaContent(metaName) {\n    var el = getGlobalObject().document.querySelector(\"meta[name=\" + metaName + \"]\");\n    return el ? el.getAttribute('content') : null;\n}\n/** Adjusts transaction value based on max transaction duration */\nfunction adjustTransactionDuration(maxDuration, transaction, endTimestamp) {\n    var diff = endTimestamp - transaction.startTimestamp;\n    var isOutdatedTransaction = endTimestamp && (diff > maxDuration || diff < 0);\n    if (isOutdatedTransaction) {\n        transaction.setStatus('deadline_exceeded');\n        transaction.setTag('maxTransactionDurationExceeded', 'true');\n    }\n}\n//# sourceMappingURL=browsertracing.js.map","import { addExtensionMethods } from './hubextensions';\nimport * as Integrations from './integrations';\nexport { Integrations };\n// This is already exported as part of `Integrations` above (and for the moment will remain so for\n// backwards compatibility), but that interferes with treeshaking, so we also export it separately\n// here.\n//\n// Previously we expected users to import tracing integrations like\n//\n// import { Integrations } from '@sentry/tracing';\n// const instance = new Integrations.BrowserTracing();\n//\n// This makes the integrations unable to be treeshaken though. To address this, we now have\n// this individual export. We now expect users to consume BrowserTracing like so:\n//\n// import { BrowserTracing } from '@sentry/tracing';\n// const instance = new BrowserTracing();\n//\n// For an example of of the new usage of BrowserTracing, see @sentry/nextjs index.client.ts\nexport { BrowserTracing } from './browser';\nexport { Span, spanStatusfromHttpCode } from './span';\n// eslint-disable-next-line deprecation/deprecation\nexport { SpanStatus } from './spanstatus';\nexport { Transaction } from './transaction';\nexport { \n// TODO deprecate old name in v7\ninstrumentOutgoingRequests as registerRequestInstrumentation, defaultRequestInstrumentationOptions, } from './browser';\nexport { IdleTransaction } from './idletransaction';\nexport { startIdleTransaction } from './hubextensions';\n// We are patching the global object with our hub extension methods\naddExtensionMethods();\nexport { addExtensionMethods };\nexport { extractTraceparentData, getActiveTransaction, hasTracingEnabled, stripUrlQueryAndFragment, TRACEPARENT_REGEXP, } from './utils';\n//# sourceMappingURL=index.js.map","import { __assign } from \"tslib\";\nimport { dropUndefinedKeys, timestampWithMs, uuid4 } from '@sentry/utils';\n/**\n * Keeps track of finished spans for a given transaction\n * @internal\n * @hideconstructor\n * @hidden\n */\nvar SpanRecorder = /** @class */ (function () {\n    function SpanRecorder(maxlen) {\n        if (maxlen === void 0) { maxlen = 1000; }\n        this.spans = [];\n        this._maxlen = maxlen;\n    }\n    /**\n     * This is just so that we don't run out of memory while recording a lot\n     * of spans. At some point we just stop and flush out the start of the\n     * trace tree (i.e.the first n spans with the smallest\n     * start_timestamp).\n     */\n    SpanRecorder.prototype.add = function (span) {\n        if (this.spans.length > this._maxlen) {\n            span.spanRecorder = undefined;\n        }\n        else {\n            this.spans.push(span);\n        }\n    };\n    return SpanRecorder;\n}());\nexport { SpanRecorder };\n/**\n * Span contains all data about a span\n */\nvar Span = /** @class */ (function () {\n    /**\n     * You should never call the constructor manually, always use `Sentry.startTransaction()`\n     * or call `startChild()` on an existing span.\n     * @internal\n     * @hideconstructor\n     * @hidden\n     */\n    function Span(spanContext) {\n        /**\n         * @inheritDoc\n         */\n        this.traceId = uuid4();\n        /**\n         * @inheritDoc\n         */\n        this.spanId = uuid4().substring(16);\n        /**\n         * Timestamp in seconds when the span was created.\n         */\n        this.startTimestamp = timestampWithMs();\n        /**\n         * @inheritDoc\n         */\n        this.tags = {};\n        /**\n         * @inheritDoc\n         */\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        this.data = {};\n        if (!spanContext) {\n            return this;\n        }\n        if (spanContext.traceId) {\n            this.traceId = spanContext.traceId;\n        }\n        if (spanContext.spanId) {\n            this.spanId = spanContext.spanId;\n        }\n        if (spanContext.parentSpanId) {\n            this.parentSpanId = spanContext.parentSpanId;\n        }\n        // We want to include booleans as well here\n        if ('sampled' in spanContext) {\n            this.sampled = spanContext.sampled;\n        }\n        if (spanContext.op) {\n            this.op = spanContext.op;\n        }\n        if (spanContext.description) {\n            this.description = spanContext.description;\n        }\n        if (spanContext.data) {\n            this.data = spanContext.data;\n        }\n        if (spanContext.tags) {\n            this.tags = spanContext.tags;\n        }\n        if (spanContext.status) {\n            this.status = spanContext.status;\n        }\n        if (spanContext.startTimestamp) {\n            this.startTimestamp = spanContext.startTimestamp;\n        }\n        if (spanContext.endTimestamp) {\n            this.endTimestamp = spanContext.endTimestamp;\n        }\n    }\n    /**\n     * @inheritDoc\n     * @deprecated\n     */\n    Span.prototype.child = function (spanContext) {\n        return this.startChild(spanContext);\n    };\n    /**\n     * @inheritDoc\n     */\n    Span.prototype.startChild = function (spanContext) {\n        var childSpan = new Span(__assign(__assign({}, spanContext), { parentSpanId: this.spanId, sampled: this.sampled, traceId: this.traceId }));\n        childSpan.spanRecorder = this.spanRecorder;\n        if (childSpan.spanRecorder) {\n            childSpan.spanRecorder.add(childSpan);\n        }\n        childSpan.transaction = this.transaction;\n        return childSpan;\n    };\n    /**\n     * @inheritDoc\n     */\n    Span.prototype.setTag = function (key, value) {\n        var _a;\n        this.tags = __assign(__assign({}, this.tags), (_a = {}, _a[key] = value, _a));\n        return this;\n    };\n    /**\n     * @inheritDoc\n     */\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any, @typescript-eslint/explicit-module-boundary-types\n    Span.prototype.setData = function (key, value) {\n        var _a;\n        this.data = __assign(__assign({}, this.data), (_a = {}, _a[key] = value, _a));\n        return this;\n    };\n    /**\n     * @inheritDoc\n     */\n    Span.prototype.setStatus = function (value) {\n        this.status = value;\n        return this;\n    };\n    /**\n     * @inheritDoc\n     */\n    Span.prototype.setHttpStatus = function (httpStatus) {\n        this.setTag('http.status_code', String(httpStatus));\n        var spanStatus = spanStatusfromHttpCode(httpStatus);\n        if (spanStatus !== 'unknown_error') {\n            this.setStatus(spanStatus);\n        }\n        return this;\n    };\n    /**\n     * @inheritDoc\n     */\n    Span.prototype.isSuccess = function () {\n        return this.status === 'ok';\n    };\n    /**\n     * @inheritDoc\n     */\n    Span.prototype.finish = function (endTimestamp) {\n        this.endTimestamp = typeof endTimestamp === 'number' ? endTimestamp : timestampWithMs();\n    };\n    /**\n     * @inheritDoc\n     */\n    Span.prototype.toTraceparent = function () {\n        var sampledString = '';\n        if (this.sampled !== undefined) {\n            sampledString = this.sampled ? '-1' : '-0';\n        }\n        return this.traceId + \"-\" + this.spanId + sampledString;\n    };\n    /**\n     * @inheritDoc\n     */\n    Span.prototype.toContext = function () {\n        return dropUndefinedKeys({\n            data: this.data,\n            description: this.description,\n            endTimestamp: this.endTimestamp,\n            op: this.op,\n            parentSpanId: this.parentSpanId,\n            sampled: this.sampled,\n            spanId: this.spanId,\n            startTimestamp: this.startTimestamp,\n            status: this.status,\n            tags: this.tags,\n            traceId: this.traceId,\n        });\n    };\n    /**\n     * @inheritDoc\n     */\n    Span.prototype.updateWithContext = function (spanContext) {\n        var _a, _b, _c, _d, _e;\n        this.data = (_a = spanContext.data, (_a !== null && _a !== void 0 ? _a : {}));\n        this.description = spanContext.description;\n        this.endTimestamp = spanContext.endTimestamp;\n        this.op = spanContext.op;\n        this.parentSpanId = spanContext.parentSpanId;\n        this.sampled = spanContext.sampled;\n        this.spanId = (_b = spanContext.spanId, (_b !== null && _b !== void 0 ? _b : this.spanId));\n        this.startTimestamp = (_c = spanContext.startTimestamp, (_c !== null && _c !== void 0 ? _c : this.startTimestamp));\n        this.status = spanContext.status;\n        this.tags = (_d = spanContext.tags, (_d !== null && _d !== void 0 ? _d : {}));\n        this.traceId = (_e = spanContext.traceId, (_e !== null && _e !== void 0 ? _e : this.traceId));\n        return this;\n    };\n    /**\n     * @inheritDoc\n     */\n    Span.prototype.getTraceContext = function () {\n        return dropUndefinedKeys({\n            data: Object.keys(this.data).length > 0 ? this.data : undefined,\n            description: this.description,\n            op: this.op,\n            parent_span_id: this.parentSpanId,\n            span_id: this.spanId,\n            status: this.status,\n            tags: Object.keys(this.tags).length > 0 ? this.tags : undefined,\n            trace_id: this.traceId,\n        });\n    };\n    /**\n     * @inheritDoc\n     */\n    Span.prototype.toJSON = function () {\n        return dropUndefinedKeys({\n            data: Object.keys(this.data).length > 0 ? this.data : undefined,\n            description: this.description,\n            op: this.op,\n            parent_span_id: this.parentSpanId,\n            span_id: this.spanId,\n            start_timestamp: this.startTimestamp,\n            status: this.status,\n            tags: Object.keys(this.tags).length > 0 ? this.tags : undefined,\n            timestamp: this.endTimestamp,\n            trace_id: this.traceId,\n        });\n    };\n    return Span;\n}());\nexport { Span };\n/**\n * Converts a HTTP status code into a {@link SpanStatusType}.\n *\n * @param httpStatus The HTTP response status code.\n * @returns The span status or unknown_error.\n */\nexport function spanStatusfromHttpCode(httpStatus) {\n    if (httpStatus < 400 && httpStatus >= 100) {\n        return 'ok';\n    }\n    if (httpStatus >= 400 && httpStatus < 500) {\n        switch (httpStatus) {\n            case 401:\n                return 'unauthenticated';\n            case 403:\n                return 'permission_denied';\n            case 404:\n                return 'not_found';\n            case 409:\n                return 'already_exists';\n            case 413:\n                return 'failed_precondition';\n            case 429:\n                return 'resource_exhausted';\n            default:\n                return 'invalid_argument';\n        }\n    }\n    if (httpStatus >= 500 && httpStatus < 600) {\n        switch (httpStatus) {\n            case 501:\n                return 'unimplemented';\n            case 503:\n                return 'unavailable';\n            case 504:\n                return 'deadline_exceeded';\n            default:\n                return 'internal_error';\n        }\n    }\n    return 'unknown_error';\n}\n//# sourceMappingURL=span.js.map","import { __assign, __extends } from \"tslib\";\nimport { getCurrentHub, Hub } from '@sentry/hub';\nimport { dropUndefinedKeys, isInstanceOf, logger } from '@sentry/utils';\nimport { Span as SpanClass, SpanRecorder } from './span';\n/** JSDoc */\nvar Transaction = /** @class */ (function (_super) {\n    __extends(Transaction, _super);\n    /**\n     * This constructor should never be called manually. Those instrumenting tracing should use\n     * `Sentry.startTransaction()`, and internal methods should use `hub.startTransaction()`.\n     * @internal\n     * @hideconstructor\n     * @hidden\n     */\n    function Transaction(transactionContext, hub) {\n        var _this = _super.call(this, transactionContext) || this;\n        _this._measurements = {};\n        /**\n         * The reference to the current hub.\n         */\n        _this._hub = getCurrentHub();\n        if (isInstanceOf(hub, Hub)) {\n            _this._hub = hub;\n        }\n        _this.name = transactionContext.name || '';\n        _this.metadata = transactionContext.metadata || {};\n        _this._trimEnd = transactionContext.trimEnd;\n        // this is because transactions are also spans, and spans have a transaction pointer\n        _this.transaction = _this;\n        return _this;\n    }\n    /**\n     * JSDoc\n     */\n    Transaction.prototype.setName = function (name) {\n        this.name = name;\n    };\n    /**\n     * Attaches SpanRecorder to the span itself\n     * @param maxlen maximum number of spans that can be recorded\n     */\n    Transaction.prototype.initSpanRecorder = function (maxlen) {\n        if (maxlen === void 0) { maxlen = 1000; }\n        if (!this.spanRecorder) {\n            this.spanRecorder = new SpanRecorder(maxlen);\n        }\n        this.spanRecorder.add(this);\n    };\n    /**\n     * Set observed measurements for this transaction.\n     * @hidden\n     */\n    Transaction.prototype.setMeasurements = function (measurements) {\n        this._measurements = __assign({}, measurements);\n    };\n    /**\n     * Set metadata for this transaction.\n     * @hidden\n     */\n    Transaction.prototype.setMetadata = function (newMetadata) {\n        this.metadata = __assign(__assign({}, this.metadata), newMetadata);\n    };\n    /**\n     * @inheritDoc\n     */\n    Transaction.prototype.finish = function (endTimestamp) {\n        var _this = this;\n        // This transaction is already finished, so we should not flush it again.\n        if (this.endTimestamp !== undefined) {\n            return undefined;\n        }\n        if (!this.name) {\n            logger.warn('Transaction has no name, falling back to `<unlabeled transaction>`.');\n            this.name = '<unlabeled transaction>';\n        }\n        // just sets the end timestamp\n        _super.prototype.finish.call(this, endTimestamp);\n        if (this.sampled !== true) {\n            // At this point if `sampled !== true` we want to discard the transaction.\n            logger.log('[Tracing] Discarding transaction because its trace was not chosen to be sampled.');\n            var client = this._hub.getClient();\n            var transport = client && client.getTransport && client.getTransport();\n            if (transport && transport.recordLostEvent) {\n                transport.recordLostEvent('sample_rate', 'transaction');\n            }\n            return undefined;\n        }\n        var finishedSpans = this.spanRecorder ? this.spanRecorder.spans.filter(function (s) { return s !== _this && s.endTimestamp; }) : [];\n        if (this._trimEnd && finishedSpans.length > 0) {\n            this.endTimestamp = finishedSpans.reduce(function (prev, current) {\n                if (prev.endTimestamp && current.endTimestamp) {\n                    return prev.endTimestamp > current.endTimestamp ? prev : current;\n                }\n                return prev;\n            }).endTimestamp;\n        }\n        var transaction = {\n            contexts: {\n                trace: this.getTraceContext(),\n            },\n            spans: finishedSpans,\n            start_timestamp: this.startTimestamp,\n            tags: this.tags,\n            timestamp: this.endTimestamp,\n            transaction: this.name,\n            type: 'transaction',\n            sdkProcessingMetadata: this.metadata,\n        };\n        var hasMeasurements = Object.keys(this._measurements).length > 0;\n        if (hasMeasurements) {\n            logger.log('[Measurements] Adding measurements to transaction', JSON.stringify(this._measurements, undefined, 2));\n            transaction.measurements = this._measurements;\n        }\n        logger.log(\"[Tracing] Finishing \" + this.op + \" transaction: \" + this.name + \".\");\n        return this._hub.captureEvent(transaction);\n    };\n    /**\n     * @inheritDoc\n     */\n    Transaction.prototype.toContext = function () {\n        var spanContext = _super.prototype.toContext.call(this);\n        return dropUndefinedKeys(__assign(__assign({}, spanContext), { name: this.name, trimEnd: this._trimEnd }));\n    };\n    /**\n     * @inheritDoc\n     */\n    Transaction.prototype.updateWithContext = function (transactionContext) {\n        var _a;\n        _super.prototype.updateWithContext.call(this, transactionContext);\n        this.name = (_a = transactionContext.name, (_a !== null && _a !== void 0 ? _a : ''));\n        this._trimEnd = transactionContext.trimEnd;\n        return this;\n    };\n    return Transaction;\n}(SpanClass));\nexport { Transaction };\n//# sourceMappingURL=transaction.js.map","import { getCurrentHub } from '@sentry/hub';\n/**\n * The `extractTraceparentData` function and `TRACEPARENT_REGEXP` constant used\n * to be declared in this file. It was later moved into `@sentry/utils` as part of a\n * move to remove `@sentry/tracing` dependencies from `@sentry/node` (`extractTraceparentData`\n * is the only tracing function used by `@sentry/node`).\n *\n * These exports are kept here for backwards compatability's sake.\n *\n * TODO(v7): Reorganize these exports\n *\n * See https://github.com/getsentry/sentry-javascript/issues/4642 for more details.\n */\nexport { TRACEPARENT_REGEXP, extractTraceparentData } from '@sentry/utils';\n/**\n * Determines if tracing is currently enabled.\n *\n * Tracing is enabled when at least one of `tracesSampleRate` and `tracesSampler` is defined in the SDK config.\n */\nexport function hasTracingEnabled(maybeOptions) {\n    var client = getCurrentHub().getClient();\n    var options = maybeOptions || (client && client.getOptions());\n    return !!options && ('tracesSampleRate' in options || 'tracesSampler' in options);\n}\n/** Grabs active transaction off scope, if any */\nexport function getActiveTransaction(maybeHub) {\n    var hub = maybeHub || getCurrentHub();\n    var scope = hub.getScope();\n    return scope && scope.getTransaction();\n}\n/**\n * Converts from milliseconds to seconds\n * @param time time in ms\n */\nexport function msToSec(time) {\n    return time / 1000;\n}\n/**\n * Converts from seconds to milliseconds\n * @param time time in seconds\n */\nexport function secToMs(time) {\n    return time * 1000;\n}\n// so it can be used in manual instrumentation without necessitating a hard dependency on @sentry/utils\nexport { stripUrlQueryAndFragment } from '@sentry/utils';\n//# sourceMappingURL=utils.js.map","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __createBinding(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (p !== \"default\" && !exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n}\r\n"],"names":["FINISH_REASON_TAG","IDLE_TRANSACTION_FINISH_REASONS","errorCallback","activeTransaction","status_1","logger","log","setStatus","traceHeaders","scope","this","getScope","span","getSpan","toTraceparent","sample","transaction","options","samplingContext","undefined","sampled","setMetadata","transactionSampling","method","tracesSampler","sampleRate","rate","Number","parentSampled","tracesSampleRate","isNaN","JSON","stringify","Math","random","op","name","_startTransaction","transactionContext","customSamplingContext","client","getClient","getOptions","initSpanRecorder","_experiments","maxSpans","startIdleTransaction","hub","idleTimeout","onScope","addExtensionMethods","carrier","__SENTRY__","extensions","startTransaction","packageToIntegrationMapping","mongodb","module","Mongo","mongoose","mysql","Mysql","pg","Postgres","mappedPackages","Object","keys","filter","moduleName","map","pkg","e","p","length","integrations","_autoloadDatabaseIntegrations","DEFAULT_IDLE_TIMEOUT","IdleTransactionSpanRecorder","_super","_pushActivity","_popActivity","transactionSpanId","maxlen","_this","call","prototype","add","spanId","finish","endTimestamp","IdleTransaction","_idleHub","_idleTimeout","_onScope","activities","_heartbeatCounter","_finished","_beforeFinishCallbacks","clearActiveTransaction","configureScope","setSpan","_initTimeout","setTimeout","e_1","_a","spanRecorder","Date","toISOString","_b","_c","next","done","callback","value","e_1_1","error","return","spans","keepSpan","startTimestamp","registerBeforeFinishCallback","push","id","_pingHeartbeat","clearTimeout","timeout","end_1","setTag","_beat","heartbeatString","join","_prevHeartbeatString","getTransaction","Express","_router","router","app","_methods","Array","isArray","methods","concat","setupOnce","forEach","originalCallback","args","_i","arguments","apply","wrapMiddlewareArgs","patchMiddleware","wrap","fn","arity","req","res","__sentry_transaction","span_1","startChild","description","once","err","Error","arg","a","_usePgNative","usePgNative","_","getCurrentHub","native","Client","orig","config","values","text","result","rv","is","then","sql","fields","OPERATIONS","OPERATION_SIGNATURES","bulkWrite","countDocuments","createIndex","createIndexes","deleteMany","deleteOne","distinct","dropIndex","find","findOne","findOneAndDelete","findOneAndReplace","findOneAndUpdate","indexExists","insertMany","insertOne","mapReduce","rename","replaceOne","updateMany","updateOne","_operations","operations","_describeOperations","describeOperations","_useMongoose","useMongoose","_instrumentOperations","Collection","collection","operation","_patchOperation","getSpanContext","_getSpanContextFromOperationArguments","bind","_d","lastArg","parentSpan","maybePromise","slice","data","collectionName","dbName","namespace","spanContext","signature","shouldDescribe","includes","reduce","i","_oO","TRACEPARENT_REGEXP","RegExp","extractTraceparentData","traceparent","matches","match","traceId","parentSpanId","bindReporter","metric","reportAllChanges","prevValue","forceReport","delta","initMetric","entries","now","floor","observe","type","PerformanceObserver","supportedEntryTypes","self","po","l","getEntries","buffered","onHidden","cb","onHiddenOrPageHide","event","document","visibilityState","removeEventListener","addEventListener","firstHiddenTime","getVisibilityWatcher","Infinity","timeStamp","reportedMetricIDs","MetricsInstrumentation","_reportAllChanges","_measurements","_performanceCursor","performance","mark","_trackCLS","_trackLCP","_trackFID","addPerformanceEntries","responseStartTimestamp","requestStartTimestamp","timeOrigin","entry","startTime","duration","entryType","addPerformanceNavigationTiming","_startChild","requestStart","responseEnd","responseStart","addRequest","addNavigationSpans","measureStartTimestamp","measureEndTimestamp","addMeasureSpans","firstHidden","shouldRecord","resourceName","replace","location","origin","initiatorType","transferSize","encodedBodySize","decodedBodySize","addResourceSpans","max","_trackNavigator","timeOrigin_1","oldValue","measurementTimestamp","normalizedValue","abs","cls","setMeasurements","lcpEntry","clsEntry","element","url","trim","size","sources","source","index","node","tagMetricInfo","_lcpEntry","_clsEntry","navigator","connection","effectiveType","isMeasurementValue","rtt","downlink","deviceMemory","String","hardwareConcurrency","onReport","report","sessionValue","sessionEntries","entryHandler","pop","hadRecentInput","firstSessionEntry","lastSessionEntry","takeRecords","visibilityWatcher","stopListening_1","disconnect","capture","getLCP","processingStart","eventEnd","end","start","ctx","isFinite","defaultRequestInstrumentationOptions","traceFetch","traceXHR","tracingOrigins","instrumentOutgoingRequests","_options","shouldCreateSpanForRequest","urlMap","defaultShouldCreateSpan","origins","some","shouldCreateSpan","handlerData","fetchData","__span","response","setHttpStatus","status","request","headers","Request","append","fetchCallback","xhr","__sentry_own_request__","__sentry_xhr__","__sentry_xhr_span_id__","status_code","setRequestHeader","xhrCallback","SpanStatus","DEFAULT_BROWSER_TRACING_OPTIONS","markBackgroundTransactions","maxTransactionDuration","routingInstrumentation","customStartTransaction","startTransactionOnPageLoad","startTransactionOnLocationChange","startingUrl","href","pathname","to","from","indexOf","BrowserTracing","_emitOptionsWarning","_configuredIdleTimeout","_metricOptions","_metrics","_getCurrentHub","instrumentRouting","context","_createRouteTransaction","hidden","beforeNavigate","parentContextFromHeader","el","header","querySelector","getAttribute","getHeaderContext","expandedContext","trimEnd","modifiedContext","finalContext","idleTransaction","maxDuration","diff","adjustTransactionDuration","SpanRecorder","_maxlen","Span","substring","tags","child","childSpan","key","setData","httpStatus","spanStatus","spanStatusfromHttpCode","isSuccess","sampledString","toContext","updateWithContext","_e","getTraceContext","parent_span_id","span_id","trace_id","toJSON","start_timestamp","timestamp","Transaction","_hub","metadata","_trimEnd","setName","measurements","newMetadata","finishedSpans","s","prev","current","contexts","trace","sdkProcessingMetadata","captureEvent","transport","getTransport","recordLostEvent","hasTracingEnabled","maybeOptions","getActiveTransaction","maybeHub","msToSec","time","secToMs","extendStatics","d","b","setPrototypeOf","__proto__","hasOwnProperty","__extends","__","constructor","create","__assign","assign","t","n","__rest","getOwnPropertySymbols","propertyIsEnumerable","__values","o","Symbol","iterator","m","TypeError","__read","r","ar","__spread"],"sourceRoot":""}